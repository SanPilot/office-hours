name: Deploy Staging

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build Dist Branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: "dist"
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: "set git bot commiter"
        run: git config --global user.name "KOH Build Bot" && git config --global user.email "bot@khouryofficehours.com"
      - name: "merge new changes into dist"
        run: git merge origin/master
      - run: echo "::set-output name=version::$(git rev-parse origin/master)"
        id: pre-version
      - uses: bahmutov/npm-install@v1
      - name: Delete old builds
        run: rm -rf packages/app/.next
      - run: yarn build
        env:
          NEXT_PUBLIC_APM_SERVER: ${{ secrets.ELASTIC_APM_SERVER_URL}}
          NEXT_PUBLIC_SERVICE_VERSION: ${{ github.sha }}
      ## Ensure no new changes have been pushed in the time we spent building
      - run: git fetch && echo "::set-output name=version::$(git rev-parse origin/master)"
        id: post-version
      - if: steps.pre-version.outputs.version == steps.post-version.outputs.version 
        uses: EndBug/add-and-commit@v4
        with:
          add: "packages"
          author_name: KOH Build Bot
          author_email: bot@khouryofficehours.com
          message: "Added built files"
          ref: "dist"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Sourcemaps to Elastic APM
        run: yarn ts-node packages/app/scripts/uploadSourceMapToAPM.ts
        env:
          ELASTIC_APM_SERVER_URL: ${{ secrets.ELASTIC_APM_SERVER_URL}}
          ELASTIC_APM_SECRET_TOKEN: ${{ secrets.ELASTIC_APM_SECRET_TOKEN }}
          SERVICE_VERSION: ${{ github.sha }}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - uses: actions/checkout@v2
      - name: "pm2 deploy to staging"
        run: "npx pm2 deploy infrastructure/prod/ecosystem.config.js staging update"
