{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { API } from \"@koh/api-client\";\nimport { Button } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nimport { useCourse } from \"../../hooks/useCourse\";\nimport { useProfile } from \"../../hooks/useProfile\";\nvar CheckinButton = styled(Button).withConfig({\n  displayName: \"TACheckinButton__CheckinButton\",\n  componentId: \"oiahss-0\"\n})([\"background:#2a9187;border-radius:6px;color:white;font-weight:500;font-size:14px;\"]);\nvar CheckOutButton = styled(Button).withConfig({\n  displayName: \"TACheckinButton__CheckOutButton\",\n  componentId: \"oiahss-1\"\n})([\"color:#da3236;font-weight:500;font-size:14px;border-radius:6px;\"]);\nexport default function TACheckinButton(_ref) {\n  var courseId = _ref.courseId;\n  var router = useRouter();\n\n  var _useCourse = useCourse(courseId),\n      course = _useCourse.course,\n      mutateCourse = _useCourse.mutateCourse;\n\n  var _useProfile = useProfile(),\n      id = _useProfile.id;\n\n  var queueCheckedIn = course === null || course === void 0 ? void 0 : course.queues.find(function (queue) {\n    return queue.staffList.find(function (staff) {\n      return staff.id === id;\n    });\n  });\n\n  function checkInTA() {\n    return _checkInTA.apply(this, arguments);\n  }\n\n  function _checkInTA() {\n    _checkInTA = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var redirectID;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return API.taStatus.checkIn(courseId, \"Online\");\n\n            case 2:\n              redirectID = _context2.sent;\n              router.push(\"/course/[cid]/queue/[qid]\", \"/course/\".concat(courseId, \"/queue/\").concat(redirectID.id));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _checkInTA.apply(this, arguments);\n  }\n\n  return __jsx(React.Fragment, null, queueCheckedIn ? __jsx(CheckOutButton, {\n    type: \"default\",\n    size: \"large\",\n    \"data-cy\": \"check-out-button\",\n    onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return API.taStatus.checkOut(courseId, \"Online\");\n\n            case 2:\n              mutateCourse();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))\n  }, \"Check Out\") : __jsx(CheckinButton, {\n    type: \"default\",\n    size: \"large\",\n    onClick: function onClick() {\n      return checkInTA();\n    },\n    disabled: !course,\n    \"data-cy\": \"check-in-button\"\n  }, \"Check In\"));\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/components/Today/TACheckinButton.tsx"],"names":["API","Button","useRouter","styled","useCourse","useProfile","CheckinButton","CheckOutButton","TACheckinButton","courseId","router","course","mutateCourse","id","queueCheckedIn","queues","find","queue","staffList","staff","checkInTA","taStatus","checkIn","redirectID","push","checkOut"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,iBAApB;AACA,SAASC,MAAT,QAA4C,MAA5C;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AAEA,IAAMC,aAAa,GAAGH,MAAM,CAACF,MAAD,CAAT;AAAA;AAAA;AAAA,wFAAnB;AAQA,IAAMM,cAAc,GAAGJ,MAAM,CAACF,MAAD,CAAT;AAAA;AAAA;AAAA,uEAApB;AAOA,eAAe,SAASO,eAAT,OAIE;AAAA,MAHfC,QAGe,QAHfA,QAGe;AACf,MAAMC,MAAM,GAAGR,SAAS,EAAxB;;AADe,mBAGkBE,SAAS,CAACK,QAAD,CAH3B;AAAA,MAGPE,MAHO,cAGPA,MAHO;AAAA,MAGCC,YAHD,cAGCA,YAHD;;AAAA,oBAIAP,UAAU,EAJV;AAAA,MAIPQ,EAJO,eAIPA,EAJO;;AAKf,MAAMC,cAAc,GAAGH,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEI,MAAR,CAAeC,IAAf,CAAoB,UAACC,KAAD;AAAA,WACzCA,KAAK,CAACC,SAAN,CAAgBF,IAAhB,CAAqB,UAACG,KAAD;AAAA,aAAWA,KAAK,CAACN,EAAN,KAAaA,EAAxB;AAAA,KAArB,CADyC;AAAA,GAApB,CAAvB;;AALe,WASAO,SATA;AAAA;AAAA;;AAAA;AAAA,0EASf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAG2BpB,GAAG,CAACqB,QAAJ,CAAaC,OAAb,CAAqBb,QAArB,EAA+B,QAA/B,CAH3B;;AAAA;AAGQc,cAAAA,UAHR;AAKEb,cAAAA,MAAM,CAACc,IAAP,CACE,2BADF,oBAEaf,QAFb,oBAE+Bc,UAAU,CAACV,EAF1C;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATe;AAAA;AAAA;;AAoBf,SACE,4BACGC,cAAc,GACb,MAAC,cAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,eAAQ,kBAHV;AAIE,IAAA,OAAO,wEAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACDd,GAAG,CAACqB,QAAJ,CAAaI,QAAb,CAAsBhB,QAAtB,EAAgC,QAAhC,CADC;;AAAA;AAEPG,cAAAA,YAAY;;AAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;AAJT,iBADa,GAab,MAAC,aAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMQ,SAAS,EAAf;AAAA,KAHX;AAIE,IAAA,QAAQ,EAAE,CAACT,MAJb;AAKE,eAAQ;AALV,gBAdJ,CADF;AA2BD","sourcesContent":["import { API } from \"@koh/api-client\";\nimport { Button, Input, Modal, Radio } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport { ReactElement, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useCourse } from \"../../hooks/useCourse\";\nimport { useProfile } from \"../../hooks/useProfile\";\n\nconst CheckinButton = styled(Button)`\n  background: #2a9187;\n  border-radius: 6px;\n  color: white;\n  font-weight: 500;\n  font-size: 14px;\n`;\n\nconst CheckOutButton = styled(Button)`\n  color: #da3236;\n  font-weight: 500;\n  font-size: 14px;\n  border-radius: 6px;\n`;\n\nexport default function TACheckinButton({\n  courseId,\n}: {\n  courseId: number;\n}): ReactElement {\n  const router = useRouter();\n\n  const { course, mutateCourse } = useCourse(courseId);\n  const { id } = useProfile();\n  const queueCheckedIn = course?.queues.find((queue) =>\n    queue.staffList.find((staff) => staff.id === id)\n  );\n\n  async function checkInTA() {\n    // to see old check in in person functionality look at commit b4768bbfb0f36444c80961703bdbba01ff4a5596\n    //trying to limit changes to the frontend, all queues will have the room online\n    const redirectID = await API.taStatus.checkIn(courseId, \"Online\");\n\n    router.push(\n      \"/course/[cid]/queue/[qid]\",\n      `/course/${courseId}/queue/${redirectID.id}`\n    );\n  }\n\n  return (\n    <>\n      {queueCheckedIn ? (\n        <CheckOutButton\n          type=\"default\"\n          size=\"large\"\n          data-cy=\"check-out-button\"\n          onClick={async () => {\n            await API.taStatus.checkOut(courseId, \"Online\");\n            mutateCourse();\n          }}\n        >\n          Check Out\n        </CheckOutButton>\n      ) : (\n        <CheckinButton\n          type=\"default\"\n          size=\"large\"\n          onClick={() => checkInTA()}\n          disabled={!course}\n          data-cy=\"check-in-button\"\n        >\n          Check In\n        </CheckinButton>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}