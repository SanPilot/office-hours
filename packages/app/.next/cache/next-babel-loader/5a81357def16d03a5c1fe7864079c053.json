{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { DeleteRowOutlined, EditOutlined, TeamOutlined } from \"@ant-design/icons\";\nimport { API } from \"@koh/api-client\";\nimport { OpenQuestionStatus } from \"@koh/common\";\nimport { Col, Popconfirm } from \"antd\";\nimport styled from \"styled-components\";\nimport { useDraftQuestion } from \"../../../hooks/useDraftQuestion\";\nimport { useStudentQuestion } from \"../../../hooks/useStudentQuestion\";\nimport { toOrdinal } from \"../../../utils/ordinal\";\nimport Banner, { BannerButton, BannerDangerButton } from \"../Banner\";\nvar BoldNumber = styled.span.withConfig({\n  displayName: \"StudentBanner__BoldNumber\",\n  componentId: \"znqvhq-0\"\n})([\"font-weight:bold;\"]);\nvar QuestionDetails = styled.div.withConfig({\n  displayName: \"StudentBanner__QuestionDetails\",\n  componentId: \"znqvhq-1\"\n})([\"display:flex;\"]);\nvar InfoHeader = styled.div.withConfig({\n  displayName: \"StudentBanner__InfoHeader\",\n  componentId: \"znqvhq-2\"\n})([\"font-weight:bold;font-size:14px;font-variant:small-caps;\"]);\nvar Bullets = styled.ul.withConfig({\n  displayName: \"StudentBanner__Bullets\",\n  componentId: \"znqvhq-3\"\n})([\"color:#000;\"]);\nvar ColWithRightMargin = styled(Col).withConfig({\n  displayName: \"StudentBanner__ColWithRightMargin\",\n  componentId: \"znqvhq-4\"\n})([\"margin-right:32px;\"]);\nexport default function StudentBanner(_ref) {\n  var queueId = _ref.queueId,\n      editQuestion = _ref.editQuestion,\n      leaveQueue = _ref.leaveQueue;\n\n  var _useStudentQuestion = useStudentQuestion(queueId),\n      studentQuestion = _useStudentQuestion.studentQuestion,\n      studentQuestionIndex = _useStudentQuestion.studentQuestionIndex;\n\n  var _useDraftQuestion = useDraftQuestion(),\n      draftQuestion = _useDraftQuestion.draftQuestion;\n\n  switch (studentQuestion === null || studentQuestion === void 0 ? void 0 : studentQuestion.status) {\n    case \"Drafting\":\n      return __jsx(Banner, {\n        titleColor: \"#faad14\",\n        contentColor: \"#ffd666\",\n        title: \"Please finish writing your question\",\n        content: \"Your spot in queue has been temporarily reserved. Please finish describing your question to receive help and finish joining the queue.\",\n        buttons: __jsx(React.Fragment, null, __jsx(BannerButton, {\n          icon: __jsx(DeleteRowOutlined, null),\n          onClick: leaveQueue\n        }, \"Delete Draft\"), __jsx(BannerButton, {\n          \"data-cy\": \"edit-question\",\n          icon: __jsx(EditOutlined, null),\n          onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    editQuestion();\n\n                  case 1:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }))\n        }, \"Finish Draft\"))\n      });\n\n    case \"Queued\":\n      return __jsx(Banner, {\n        titleColor: \"#3684C6\",\n        contentColor: \"#ABD4F3\",\n        title: __jsx(\"span\", null, \"You are\", \" \", __jsx(BoldNumber, null, toOrdinal(studentQuestionIndex + 1)), \" in queue\"),\n        buttons: __jsx(React.Fragment, null, __jsx(LeaveQueueButton, {\n          leaveQueue: leaveQueue\n        }), __jsx(BannerButton, {\n          \"data-cy\": \"edit-question\",\n          icon: __jsx(EditOutlined, null),\n          onClick: editQuestion\n        }, \"Edit Question\")),\n        content: __jsx(QuestionDetails, null, __jsx(ColWithRightMargin, {\n          flex: \"1 1\"\n        }, __jsx(InfoHeader, null, \"question\"), __jsx(\"div\", null, studentQuestion.text)), __jsx(Col, {\n          flex: \"0 0 89px\"\n        }, __jsx(InfoHeader, null, \"type\"), __jsx(\"div\", null, studentQuestion.questionType)))\n      });\n\n    case \"Helping\":\n      return __jsx(Banner, {\n        titleColor: \"#66BB6A\",\n        contentColor: \"#82C985\",\n        title: __jsx(\"span\", null, __jsx(BoldNumber, null, studentQuestion.taHelped.name), \" is coming to help you\"),\n        buttons: __jsx(React.Fragment, null, __jsx(LeaveQueueButton, {\n          leaveQueue: leaveQueue\n        }), studentQuestion.isOnline && __jsx(BannerButton, {\n          icon: __jsx(TeamOutlined, null),\n          onClick: function onClick() {\n            window.open(\"https://teams.microsoft.com/l/chat/0/0?users=\".concat(studentQuestion.taHelped.email));\n          }\n        }, \"Open Teams DM\")),\n        content: __jsx(Bullets, null, __jsx(\"li\", null, \"Please be dressed appropriately\"), __jsx(\"li\", null, \"Be respectful of the TA\\u2019s time\"), __jsx(\"li\", null, \"Come prepared with your question!\"))\n      });\n\n    case \"ReQueueing\":\n      return __jsx(Banner, {\n        titleColor: \"#66BB6A\",\n        contentColor: \"#82C985\",\n        title: __jsx(\"span\", null, \"Are you ready to re-join the queue?\"),\n        buttons: __jsx(React.Fragment, null, __jsx(LeaveQueueButton, {\n          leaveQueue: leaveQueue\n        }), studentQuestion.isOnline && __jsx(BannerButton, {\n          icon: __jsx(TeamOutlined, null),\n          onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return API.questions.update(studentQuestion.id, {\n                      status: OpenQuestionStatus.PriorityQueued\n                    });\n\n                  case 2:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }))\n        }, \"Re-join Queue\")),\n        content: __jsx(Bullets, null, __jsx(\"li\", null, \"Have you finished doing what the TA has told you?\"), __jsx(\"li\", null, \"Once you hit requeue, you will be placed at the top of the queue\"))\n      });\n\n    case \"PriorityQueued\":\n      return __jsx(Banner, {\n        titleColor: \"#3684C6\",\n        contentColor: \"#ABD4F3\",\n        title: __jsx(\"span\", null, \"You are now in a priority queue, you will be helped soon. \", __jsx(\"br\", null), \"You were last helped by \", studentQuestion.taHelped.name, \".\"),\n        buttons: __jsx(React.Fragment, null, __jsx(LeaveQueueButton, {\n          leaveQueue: leaveQueue\n        }), __jsx(BannerButton, {\n          \"data-cy\": \"edit-question\",\n          icon: __jsx(EditOutlined, null),\n          onClick: editQuestion\n        }, \"Edit Question\")),\n        content: __jsx(QuestionDetails, null, __jsx(ColWithRightMargin, {\n          flex: \"1 1\"\n        }, __jsx(InfoHeader, null, \"question\"), __jsx(\"div\", null, studentQuestion.text)), __jsx(Col, {\n          flex: \"0 0 89px\"\n        }, __jsx(InfoHeader, null, \"type\"), __jsx(\"div\", null, studentQuestion.questionType)))\n      });\n\n    default:\n      return __jsx(\"div\", null);\n  }\n}\n\nfunction LeaveQueueButton(_ref4) {\n  var leaveQueue = _ref4.leaveQueue;\n  return __jsx(Popconfirm, {\n    title: \"Are you sure you want to leave the queue?\",\n    okText: \"Yes\",\n    cancelText: \"No\",\n    onConfirm: leaveQueue\n  }, __jsx(BannerDangerButton, {\n    \"data-cy\": \"leave-queue\",\n    icon: __jsx(DeleteRowOutlined, null)\n  }, \"Leave Queue\"));\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/components/Queue/Student/StudentBanner.tsx"],"names":["DeleteRowOutlined","EditOutlined","TeamOutlined","API","OpenQuestionStatus","Col","Popconfirm","styled","useDraftQuestion","useStudentQuestion","toOrdinal","Banner","BannerButton","BannerDangerButton","BoldNumber","span","QuestionDetails","div","InfoHeader","Bullets","ul","ColWithRightMargin","StudentBanner","queueId","editQuestion","leaveQueue","studentQuestion","studentQuestionIndex","draftQuestion","status","text","questionType","taHelped","name","isOnline","window","open","email","questions","update","id","PriorityQueued","LeaveQueueButton"],"mappings":"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","sourcesContent":["import {\n  DeleteRowOutlined,\n  EditOutlined,\n  TeamOutlined,\n} from \"@ant-design/icons\";\nimport { API } from \"@koh/api-client\";\nimport { OpenQuestionStatus } from \"@koh/common\";\nimport { Col, Popconfirm } from \"antd\";\nimport { ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport { useDraftQuestion } from \"../../../hooks/useDraftQuestion\";\nimport { useStudentQuestion } from \"../../../hooks/useStudentQuestion\";\nimport { toOrdinal } from \"../../../utils/ordinal\";\nimport Banner, { BannerButton, BannerDangerButton } from \"../Banner\";\n\nconst BoldNumber = styled.span`\n  font-weight: bold;\n`;\n\nconst QuestionDetails = styled.div`\n  display: flex;\n`;\nconst InfoHeader = styled.div`\n  font-weight: bold;\n  font-size: 14px;\n  font-variant: small-caps;\n`;\n\nconst Bullets = styled.ul`\n  color: #000;\n`;\n\nconst ColWithRightMargin = styled(Col)`\n  margin-right: 32px;\n`;\n\ninterface StudentBannerProps {\n  queueId: number;\n  editQuestion: () => void;\n  leaveQueue: () => void;\n}\nexport default function StudentBanner({\n  queueId,\n  editQuestion,\n  leaveQueue,\n}: StudentBannerProps): ReactElement {\n  const { studentQuestion, studentQuestionIndex } = useStudentQuestion(queueId);\n\n  const { draftQuestion } = useDraftQuestion();\n\n  switch (studentQuestion?.status) {\n    case \"Drafting\":\n      return (\n        <Banner\n          titleColor=\"#faad14\"\n          contentColor=\"#ffd666\"\n          title=\"Please finish writing your question\"\n          content=\"Your spot in queue has been temporarily reserved. Please finish describing your question to receive help and finish joining the queue.\"\n          buttons={\n            <>\n              <BannerButton icon={<DeleteRowOutlined />} onClick={leaveQueue}>\n                Delete Draft\n              </BannerButton>\n              <BannerButton\n                data-cy=\"edit-question\"\n                icon={<EditOutlined />}\n                onClick={async () => {\n                  editQuestion();\n                }}\n              >\n                Finish Draft\n              </BannerButton>\n            </>\n          }\n        />\n      );\n    case \"Queued\":\n      return (\n        <Banner\n          titleColor=\"#3684C6\"\n          contentColor=\"#ABD4F3\"\n          title={\n            <span>\n              You are{\" \"}\n              <BoldNumber>{toOrdinal(studentQuestionIndex + 1)}</BoldNumber> in\n              queue\n            </span>\n          }\n          buttons={\n            <>\n              <LeaveQueueButton leaveQueue={leaveQueue} />\n              <BannerButton\n                data-cy=\"edit-question\"\n                icon={<EditOutlined />}\n                onClick={editQuestion}\n              >\n                Edit Question\n              </BannerButton>\n            </>\n          }\n          content={\n            <QuestionDetails>\n              <ColWithRightMargin flex=\"1 1\">\n                <InfoHeader>question</InfoHeader>\n                <div>{studentQuestion.text}</div>\n              </ColWithRightMargin>\n              <Col flex=\"0 0 89px\">\n                <InfoHeader>type</InfoHeader>\n                <div>{studentQuestion.questionType}</div>\n              </Col>\n            </QuestionDetails>\n          }\n        />\n      );\n    case \"Helping\":\n      return (\n        <Banner\n          titleColor=\"#66BB6A\"\n          contentColor=\"#82C985\"\n          title={\n            <span>\n              <BoldNumber>{studentQuestion.taHelped.name}</BoldNumber> is coming\n              to help you\n            </span>\n          }\n          buttons={\n            <>\n              <LeaveQueueButton leaveQueue={leaveQueue} />\n              {studentQuestion.isOnline && (\n                <BannerButton\n                  icon={<TeamOutlined />}\n                  onClick={() => {\n                    window.open(\n                      `https://teams.microsoft.com/l/chat/0/0?users=${studentQuestion.taHelped.email}`\n                    );\n                  }}\n                >\n                  Open Teams DM\n                </BannerButton>\n              )}\n            </>\n          }\n          content={\n            <Bullets>\n              <li>Please be dressed appropriately</li>\n              <li>Be respectful of the TA’s time</li>\n              <li>Come prepared with your question!</li>\n            </Bullets>\n          }\n        />\n      );\n    case \"ReQueueing\":\n      return (\n        <Banner\n          titleColor=\"#66BB6A\"\n          contentColor=\"#82C985\"\n          title={<span>Are you ready to re-join the queue?</span>}\n          buttons={\n            <>\n              <LeaveQueueButton leaveQueue={leaveQueue} />\n              {studentQuestion.isOnline && (\n                <BannerButton\n                  icon={<TeamOutlined />}\n                  onClick={async () => {\n                    await API.questions.update(studentQuestion.id, {\n                      status: OpenQuestionStatus.PriorityQueued,\n                    });\n                  }}\n                >\n                  Re-join Queue\n                </BannerButton>\n              )}\n            </>\n          }\n          content={\n            <Bullets>\n              <li>Have you finished doing what the TA has told you?</li>\n              <li>\n                Once you hit requeue, you will be placed at the top of the queue\n              </li>\n            </Bullets>\n          }\n        />\n      );\n    case \"PriorityQueued\":\n      return (\n        <Banner\n          titleColor=\"#3684C6\"\n          contentColor=\"#ABD4F3\"\n          title={\n            <span>\n              You are now in a priority queue, you will be helped soon. <br />\n              You were last helped by {studentQuestion.taHelped.name}.\n            </span>\n          }\n          buttons={\n            <>\n              <LeaveQueueButton leaveQueue={leaveQueue} />\n              <BannerButton\n                data-cy=\"edit-question\"\n                icon={<EditOutlined />}\n                onClick={editQuestion}\n              >\n                Edit Question\n              </BannerButton>\n            </>\n          }\n          content={\n            <QuestionDetails>\n              <ColWithRightMargin flex=\"1 1\">\n                <InfoHeader>question</InfoHeader>\n                <div>{studentQuestion.text}</div>\n              </ColWithRightMargin>\n              <Col flex=\"0 0 89px\">\n                <InfoHeader>type</InfoHeader>\n                <div>{studentQuestion.questionType}</div>\n              </Col>\n            </QuestionDetails>\n          }\n        />\n      );\n    default:\n      return <div />;\n  }\n}\n\nfunction LeaveQueueButton({ leaveQueue }: { leaveQueue: () => void }) {\n  return (\n    <Popconfirm\n      title={`Are you sure you want to leave the queue?`}\n      okText=\"Yes\"\n      cancelText=\"No\"\n      onConfirm={leaveQueue}\n    >\n      <BannerDangerButton data-cy=\"leave-queue\" icon={<DeleteRowOutlined />}>\n        Leave Queue\n      </BannerDangerButton>\n    </Popconfirm>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}