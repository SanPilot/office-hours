{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { API } from \"@koh/api-client\";\nimport { OpenQuestionStatus } from \"@koh/common\";\nimport { Button, Col, Drawer, Popconfirm, Row, Tag, Tooltip } from \"antd\";\nimport styled from \"styled-components\";\nimport { getWaitTime } from \"../../../utils/TimeUtil\";\nimport AvatarWithInitals from \"../../common/AvatarWithInitials\";\nimport { questionStatusToColor } from \"../QueueCardSharedComponents\";\nvar FullWidth = styled.div.withConfig({\n  displayName: \"StudentPopupCard__FullWidth\",\n  componentId: \"sc-1ihgq9e-0\"\n})([\"margin-top:32px;width:100%;\"]);\nvar Container = styled.div.withConfig({\n  displayName: \"StudentPopupCard__Container\",\n  componentId: \"sc-1ihgq9e-1\"\n})([\"display:flex;align-items:center;justify-content:center;flex-direction:column;padding-top:24px;\"]);\nvar Email = styled.div.withConfig({\n  displayName: \"StudentPopupCard__Email\",\n  componentId: \"sc-1ihgq9e-2\"\n})([\"font-size:12px;line-height:20px;color:#bfbfbf;\"]);\nvar Title = styled.div.withConfig({\n  displayName: \"StudentPopupCard__Title\",\n  componentId: \"sc-1ihgq9e-3\"\n})([\"font-size:16px;font-weight:500;line-height:24px;\"]);\nvar InfoTextDiv = styled.div.withConfig({\n  displayName: \"StudentPopupCard__InfoTextDiv\",\n  componentId: \"sc-1ihgq9e-4\"\n})([\"text-align:center;margin-top:20px;\"]);\nvar StatusTag = styled(Tag).withConfig({\n  displayName: \"StudentPopupCard__StatusTag\",\n  componentId: \"sc-1ihgq9e-5\"\n})([\"width:96px;text-align:center;margin:0 auto;margin-top:12px;\"]);\nvar HeadingText = styled.div.withConfig({\n  displayName: \"StudentPopupCard__HeadingText\",\n  componentId: \"sc-1ihgq9e-6\"\n})([\"font-size:14px;line-height:22px;font-weight:600;color:#bfbfbf;font-variant:small-caps;\"]);\nvar StyledRow = styled(Row).withConfig({\n  displayName: \"StudentPopupCard__StyledRow\",\n  componentId: \"sc-1ihgq9e-7\"\n})([\"width:100%;margin-top:40px;\"]);\nvar ButtonDiv = styled.div.withConfig({\n  displayName: \"StudentPopupCard__ButtonDiv\",\n  componentId: \"sc-1ihgq9e-8\"\n})([\"padding:8px;\"]);\nvar RemoveButton = styled(Button).withConfig({\n  displayName: \"StudentPopupCard__RemoveButton\",\n  componentId: \"sc-1ihgq9e-9\"\n})([\"margin-bottom:8px;\"]);\nvar BodyText = styled.div.withConfig({\n  displayName: \"StudentPopupCard__BodyText\",\n  componentId: \"sc-1ihgq9e-10\"\n})([\"font-size:14px;line-height:22px;margin-top:8px;color:#595959;\"]);\n\nvar StudentPopupCard = function StudentPopupCard(_ref) {\n  var updateQuestion = _ref.updateQuestion,\n      onClose = _ref.onClose,\n      question = _ref.question,\n      visible = _ref.visible,\n      isStaffCheckedIn = _ref.isStaffCheckedIn;\n  return __jsx(Drawer, {\n    placement: \"right\",\n    closable: true,\n    visible: visible,\n    width: 272,\n    onClose: onClose,\n    footer: __jsx(ButtonDiv, null, __jsx(Tooltip, {\n      title: !isStaffCheckedIn && \"You must check in to help students!\"\n    }, __jsx(Popconfirm, {\n      title: \"Are you sure you want to delete this question from the queue?\",\n      okText: \"Yes\",\n      cancelText: \"No\",\n      onConfirm: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return onClose();\n\n              case 2:\n                _context.next = 4;\n                return updateQuestion(question, OpenQuestionStatus.TADeleted);\n\n              case 4:\n                _context.next = 6;\n                return API.questions.notify(question.id);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })),\n      disabled: !isStaffCheckedIn\n    }, __jsx(RemoveButton, {\n      danger: true,\n      block: true,\n      disabled: !isStaffCheckedIn,\n      \"data-cy\": \"remove-from-queue\"\n    }, \"Remove from Queue\"))), __jsx(Tooltip, {\n      title: !isStaffCheckedIn && \"You must check in to help students!\"\n    }, __jsx(Button, {\n      block: true,\n      type: \"primary\",\n      onClick: function onClick() {\n        updateQuestion(question, OpenQuestionStatus.Helping);\n\n        if (question.isOnline) {\n          window.open(\"https://teams.microsoft.com/l/chat/0/0?users=\".concat(question.creator.email));\n        }\n      },\n      disabled: !isStaffCheckedIn || question.status === \"Drafting\",\n      \"data-cy\": \"help-student\"\n    }, \"Help\")))\n  }, __jsx(Container, null, __jsx(AvatarWithInitals, {\n    size: 104,\n    fontSize: 56,\n    name: question.creator.name\n  }), __jsx(InfoTextDiv, null, __jsx(Title, null, question.creator.name), __jsx(Email, null, question.creator.email)), __jsx(StatusTag, {\n    color: questionStatusToColor(question.status)\n  }, question.status === OpenQuestionStatus.CantFind ? \"Can't Find\" : question.status), __jsx(StyledRow, {\n    gutter: [8, 0]\n  }, __jsx(Col, {\n    span: 12\n  }, __jsx(HeadingText, null, \"wait\"), __jsx(BodyText, null, getWaitTime(question))), __jsx(Col, {\n    span: 12\n  }, __jsx(HeadingText, null, \"type\"), __jsx(BodyText, null, question.questionType.toString()))), __jsx(FullWidth, null, __jsx(HeadingText, null, \"question\"), __jsx(BodyText, null, question.text))));\n};\n\nexport default StudentPopupCard;","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/components/Queue/TA/StudentPopupCard.tsx"],"names":["API","OpenQuestionStatus","Button","Col","Drawer","Popconfirm","Row","Tag","Tooltip","styled","getWaitTime","AvatarWithInitals","questionStatusToColor","FullWidth","div","Container","Email","Title","InfoTextDiv","StatusTag","HeadingText","StyledRow","ButtonDiv","RemoveButton","BodyText","StudentPopupCard","updateQuestion","onClose","question","visible","isStaffCheckedIn","TADeleted","questions","notify","id","Helping","isOnline","window","open","creator","email","status","name","CantFind","questionType","toString","text"],"mappings":"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","sourcesContent":["import { API } from \"@koh/api-client\";\nimport { OpenQuestionStatus, Question, QuestionStatus } from \"@koh/common\";\nimport { Button, Col, Drawer, Popconfirm, Row, Tag, Tooltip } from \"antd\";\nimport { ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport getInitialsFromName from \"../../../utils/NameUtils\";\nimport { getWaitTime } from \"../../../utils/TimeUtil\";\nimport AvatarWithInitals from \"../../common/AvatarWithInitials\";\nimport { questionStatusToColor } from \"../QueueCardSharedComponents\";\n\nconst FullWidth = styled.div`\n  margin-top: 32px;\n  width: 100%;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding-top: 24px;\n`;\n\nconst Email = styled.div`\n  font-size: 12px;\n  line-height: 20px;\n  color: #bfbfbf;\n`;\n\nconst Title = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n`;\n\nconst InfoTextDiv = styled.div`\n  text-align: center;\n  margin-top: 20px;\n`;\n\nconst StatusTag = styled(Tag)`\n  width: 96px;\n  text-align: center;\n  margin: 0 auto;\n  margin-top: 12px;\n`;\n\nconst HeadingText = styled.div`\n  font-size: 14px;\n  line-height: 22px;\n  font-weight: 600;\n  color: #bfbfbf;\n  font-variant: small-caps;\n`;\n\nconst StyledRow = styled(Row)`\n  width: 100%;\n  margin-top: 40px;\n`;\n\nconst ButtonDiv = styled.div`\n  padding: 8px;\n`;\n\nconst RemoveButton = styled(Button)`\n  margin-bottom: 8px;\n`;\n\nconst BodyText = styled.div`\n  font-size: 14px;\n  line-height: 22px;\n  margin-top: 8px;\n  color: #595959;\n`;\n\ninterface StudentPopupCardProps {\n  updateQuestion: (question: Question, status: QuestionStatus) => void;\n  onClose: () => void;\n  visible: boolean;\n  question: Question;\n  isStaffCheckedIn: boolean;\n}\n\nconst StudentPopupCard = ({\n  updateQuestion,\n  onClose,\n  question,\n  visible,\n  isStaffCheckedIn,\n}: StudentPopupCardProps): ReactElement => {\n  return (\n    <Drawer\n      placement=\"right\"\n      closable={true}\n      visible={visible}\n      width={272}\n      onClose={onClose}\n      footer={\n        <ButtonDiv>\n          <Tooltip\n            title={!isStaffCheckedIn && \"You must check in to help students!\"}\n          >\n            <Popconfirm\n              title=\"Are you sure you want to delete this question from the queue?\"\n              okText=\"Yes\"\n              cancelText=\"No\"\n              onConfirm={async () => {\n                await onClose();\n                await updateQuestion(question, OpenQuestionStatus.TADeleted);\n                await API.questions.notify(question.id);\n              }}\n              disabled={!isStaffCheckedIn}\n            >\n              <RemoveButton\n                danger\n                block\n                disabled={!isStaffCheckedIn}\n                data-cy=\"remove-from-queue\"\n              >\n                Remove from Queue\n              </RemoveButton>\n            </Popconfirm>\n          </Tooltip>\n          <Tooltip\n            title={!isStaffCheckedIn && \"You must check in to help students!\"}\n          >\n            <Button\n              block\n              type=\"primary\"\n              onClick={() => {\n                updateQuestion(question, OpenQuestionStatus.Helping);\n                if (question.isOnline) {\n                  window.open(\n                    `https://teams.microsoft.com/l/chat/0/0?users=${question.creator.email}`\n                  );\n                }\n              }}\n              disabled={!isStaffCheckedIn || question.status === \"Drafting\"}\n              data-cy=\"help-student\"\n            >\n              Help\n            </Button>\n          </Tooltip>\n        </ButtonDiv>\n      }\n    >\n      <Container>\n        {\n          //TODO: bring back photo URL && get rid of RegeX\n          //src={question.creator.photoURL}\n        }\n        <AvatarWithInitals\n          size={104}\n          fontSize={56}\n          name={question.creator.name}\n        />\n        <InfoTextDiv>\n          <Title>{question.creator.name}</Title>\n          <Email>{question.creator.email}</Email>\n        </InfoTextDiv>\n\n        <StatusTag color={questionStatusToColor(question.status)}>\n          {question.status === OpenQuestionStatus.CantFind\n            ? \"Can't Find\"\n            : question.status}\n        </StatusTag>\n\n        <StyledRow gutter={[8, 0]}>\n          <Col span={12}>\n            <HeadingText>wait</HeadingText>\n            <BodyText>{getWaitTime(question)}</BodyText>\n          </Col>\n          <Col span={12}>\n            <HeadingText>type</HeadingText>\n            <BodyText>{question.questionType.toString()}</BodyText>\n          </Col>\n        </StyledRow>\n\n        <FullWidth>\n          <HeadingText>question</HeadingText>\n          <BodyText>{question.text}</BodyText>\n        </FullWidth>\n        {/* TODO: Add this back for in person office hours */}\n        {/* <FullWidth>\n          <HeadingText>location</HeadingText>\n          <BodyText>\n            {question.location || (question.isOnline && \"Online\")}\n          </BodyText>\n        </FullWidth> */}\n      </Container>\n    </Drawer>\n  );\n};\n\nexport default StudentPopupCard;\n"]},"metadata":{},"sourceType":"module"}