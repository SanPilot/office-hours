{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Modal, notification } from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\nimport { NotionRenderer } from \"react-notion\";\nexport default function ReleaseNotes() {\n  var _useLocalStorage = useLocalStorage(\"releaseNotesLastSeen\", null),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      releaseNotesLastSeen = _useLocalStorage2[0],\n      setReleaseNotesLastSeen = _useLocalStorage2[1];\n\n  var _useState = useState(0),\n      releaseNotesLastUpdated = _useState[0],\n      setReleaseNotesLastUpdated = _useState[1];\n\n  var _useState2 = useState(),\n      notionReleaseNotes = _useState2[0],\n      setNotionReleaseNotes = _useState2[1];\n\n  var _useState3 = useState(false),\n      showReleaseNotes = _useState3[0],\n      setShowReleaseNotes = _useState3[1];\n\n  useEffect(function () {\n    fetch(\"https://notion-api.splitbee.io/v1/page/abba246bfa0847baa2706ab30d0c6c7d\").then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      try {\n        var _result$beae2a02249e, _result$beae2a02249e$, _result$beae2a02249e$2;\n\n        var timeText = (_result$beae2a02249e = result[\"beae2a02-249e-4b61-9bfc-81258d93f20d\"]) === null || _result$beae2a02249e === void 0 ? void 0 : (_result$beae2a02249e$ = _result$beae2a02249e.value) === null || _result$beae2a02249e$ === void 0 ? void 0 : (_result$beae2a02249e$2 = _result$beae2a02249e$.properties) === null || _result$beae2a02249e$2 === void 0 ? void 0 : _result$beae2a02249e$2.title[0][0];\n        setReleaseNotesLastUpdated(timeText.split(\"Unix \")[1] * 1000);\n      } catch (e) {\n        console.log(\"Error Parsing release notes time:\", e);\n      } // Remove the time block and page link block from page\n\n\n      result[\"beae2a02-249e-4b61-9bfc-81258d93f20d\"].value.properties.title = [];\n      result[\"4d25f393-e570-4cd5-ad66-b278a0924225\"].value.properties.title = [];\n      setNotionReleaseNotes(result);\n    }, function (error) {\n      console.log(\"Error fetching release notes\", error);\n    });\n  }, []);\n\n  if (!releaseNotesLastSeen && releaseNotesLastUpdated || new Date(releaseNotesLastSeen) < new Date(releaseNotesLastUpdated)) {\n    notification.open({\n      message: \"We've got new features/bug fixes\",\n      type: \"info\",\n      duration: 0,\n      description: \"Click to see what's new!\",\n      className: \"clickable-notification hide-in-percy\",\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        setShowReleaseNotes(true);\n        notification.destroy();\n      }\n    });\n    setReleaseNotesLastSeen(new Date());\n  }\n\n  var openLinksInNewTab = function openLinksInNewTab(e) {\n    if (e.target.className === \"notion-link\") {\n      e.preventDefault();\n      window.open(e.target.href);\n    }\n  };\n\n  return __jsx(\"div\", {\n    onClick: openLinksInNewTab\n  }, notionReleaseNotes ? __jsx(Modal, {\n    title: \"Release Notes\",\n    visible: showReleaseNotes,\n    bodyStyle: {\n      padding: \"0px 24px\"\n    },\n    footer: __jsx(React.Fragment, null, __jsx(\"b\", null, \"Want to see more? \"), __jsx(\"a\", {\n      href: \"https://www.notion.so/Release-Notes-Archive-9a1a0eab073a463096fc3699bf48219c\"\n    }, \" \", \"Click here to view the archive\")),\n    width: 625,\n    onCancel: function onCancel() {\n      return setShowReleaseNotes(false);\n    }\n  }, __jsx(NotionRenderer, {\n    blockMap: notionReleaseNotes\n  })) : null);\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/components/Today/ReleaseNotes.tsx"],"names":["Modal","notification","useState","useEffect","useLocalStorage","NotionRenderer","ReleaseNotes","releaseNotesLastSeen","setReleaseNotesLastSeen","releaseNotesLastUpdated","setReleaseNotesLastUpdated","notionReleaseNotes","setNotionReleaseNotes","showReleaseNotes","setShowReleaseNotes","fetch","then","res","json","result","timeText","value","properties","title","split","e","console","log","error","Date","open","message","type","duration","description","className","style","cursor","onClick","destroy","openLinksInNewTab","target","preventDefault","window","href","padding"],"mappings":"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","sourcesContent":["import { Modal, notification } from \"antd\";\nimport { ReactElement, useState, useEffect } from \"react\";\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\nimport { NotionRenderer } from \"react-notion\";\n\nexport default function ReleaseNotes(): ReactElement {\n  const [releaseNotesLastSeen, setReleaseNotesLastSeen] = useLocalStorage(\n    \"releaseNotesLastSeen\",\n    null\n  );\n  const [releaseNotesLastUpdated, setReleaseNotesLastUpdated] = useState(0);\n  const [notionReleaseNotes, setNotionReleaseNotes] = useState();\n  const [showReleaseNotes, setShowReleaseNotes] = useState(false);\n\n  useEffect(() => {\n    fetch(\n      \"https://notion-api.splitbee.io/v1/page/abba246bfa0847baa2706ab30d0c6c7d\"\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          try {\n            const timeText =\n              result[\"beae2a02-249e-4b61-9bfc-81258d93f20d\"]?.value?.properties\n                ?.title[0][0];\n            setReleaseNotesLastUpdated(timeText.split(\"Unix \")[1] * 1000);\n          } catch (e) {\n            console.log(\"Error Parsing release notes time:\", e);\n          }\n          // Remove the time block and page link block from page\n          result[\n            \"beae2a02-249e-4b61-9bfc-81258d93f20d\"\n          ].value.properties.title = [];\n          result[\n            \"4d25f393-e570-4cd5-ad66-b278a0924225\"\n          ].value.properties.title = [];\n          setNotionReleaseNotes(result);\n        },\n        (error) => {\n          console.log(\"Error fetching release notes\", error);\n        }\n      );\n  }, []);\n\n  if (\n    (!releaseNotesLastSeen && releaseNotesLastUpdated) ||\n    new Date(releaseNotesLastSeen) < new Date(releaseNotesLastUpdated)\n  ) {\n    notification.open({\n      message: \"We've got new features/bug fixes\",\n      type: \"info\",\n      duration: 0,\n      description: \"Click to see what's new!\",\n      className: \"clickable-notification hide-in-percy\",\n      style: {\n        cursor: \"pointer\",\n      },\n      onClick: () => {\n        setShowReleaseNotes(true);\n        notification.destroy();\n      },\n    });\n    setReleaseNotesLastSeen(new Date());\n  }\n\n  const openLinksInNewTab = (e) => {\n    if (e.target.className === \"notion-link\") {\n      e.preventDefault();\n      window.open(e.target.href);\n    }\n  };\n\n  return (\n    <div onClick={openLinksInNewTab}>\n      {notionReleaseNotes ? (\n        <Modal\n          title={\"Release Notes\"}\n          visible={showReleaseNotes}\n          bodyStyle={{ padding: \"0px 24px\" }}\n          footer={\n            <>\n              <b>Want to see more? </b>\n              <a href=\"https://www.notion.so/Release-Notes-Archive-9a1a0eab073a463096fc3699bf48219c\">\n                {\" \"}\n                Click here to view the archive\n              </a>\n            </>\n          }\n          width={625}\n          onCancel={() => setShowReleaseNotes(false)}\n        >\n          <NotionRenderer blockMap={notionReleaseNotes} />\n        </Modal>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}