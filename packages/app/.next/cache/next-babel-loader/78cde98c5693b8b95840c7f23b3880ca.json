{"ast":null,"code":"import { OpenQuestionStatus } from \"@koh/common\";\nimport { useProfile } from \"./useProfile\";\nimport { useQuestions } from \"./useQuestions\";\n\n/**\n * SWR wrapper for the question of the currently logged-in student\n */\nexport function useStudentQuestion(qid) {\n  var profile = useProfile();\n\n  var _useQuestions = useQuestions(qid),\n      questions = _useQuestions.questions,\n      questionsError = _useQuestions.questionsError,\n      mutateQuestion = _useQuestions.mutateQuestion;\n\n  var studentQuestion = profile && questions && questions.find(function (q) {\n    return q.creator.id === profile.id;\n  });\n  var studentQuestionIndex = studentQuestion && questions.filter(function (question) {\n    return question.status !== OpenQuestionStatus.CantFind && question.status !== OpenQuestionStatus.TADeleted && question.status !== OpenQuestionStatus.Helping;\n  }).indexOf(studentQuestion);\n  return {\n    studentQuestion: studentQuestion,\n    studentQuestionIndex: studentQuestionIndex,\n    studentQuestionError: questionsError,\n    mutateStudentQuestion: mutateQuestion\n  };\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/hooks/useStudentQuestion.ts"],"names":["OpenQuestionStatus","useProfile","useQuestions","useStudentQuestion","qid","profile","questions","questionsError","mutateQuestion","studentQuestion","find","q","creator","id","studentQuestionIndex","filter","question","status","CantFind","TADeleted","Helping","indexOf","studentQuestionError","mutateStudentQuestion"],"mappings":"AAAA,SAASA,kBAAT,QAA6C,aAA7C;AAEA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAWA;;;AAGA,OAAO,SAASC,kBAAT,CAA4BC,GAA5B,EAAmE;AACxE,MAAMC,OAAO,GAAGJ,UAAU,EAA1B;;AADwE,sBAElBC,YAAY,CAACE,GAAD,CAFM;AAAA,MAEhEE,SAFgE,iBAEhEA,SAFgE;AAAA,MAErDC,cAFqD,iBAErDA,cAFqD;AAAA,MAErCC,cAFqC,iBAErCA,cAFqC;;AAIxE,MAAMC,eAAe,GACnBJ,OAAO,IAAIC,SAAX,IAAwBA,SAAS,CAACI,IAAV,CAAe,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,OAAF,CAAUC,EAAV,KAAiBR,OAAO,CAACQ,EAAhC;AAAA,GAAf,CAD1B;AAGA,MAAMC,oBAAoB,GACxBL,eAAe,IACfH,SAAS,CACNS,MADH,CAEI,UAACC,QAAD;AAAA,WACEA,QAAQ,CAACC,MAAT,KAAoBjB,kBAAkB,CAACkB,QAAvC,IACAF,QAAQ,CAACC,MAAT,KAAoBjB,kBAAkB,CAACmB,SADvC,IAEAH,QAAQ,CAACC,MAAT,KAAoBjB,kBAAkB,CAACoB,OAHzC;AAAA,GAFJ,EAOGC,OAPH,CAOWZ,eAPX,CAFF;AAWA,SAAO;AACLA,IAAAA,eAAe,EAAfA,eADK;AAELK,IAAAA,oBAAoB,EAApBA,oBAFK;AAGLQ,IAAAA,oBAAoB,EAAEf,cAHjB;AAILgB,IAAAA,qBAAqB,EAAEf;AAJlB,GAAP;AAMD","sourcesContent":["import { OpenQuestionStatus, Question } from \"@koh/common\";\nimport { responseInterface } from \"swr\";\nimport { useProfile } from \"./useProfile\";\nimport { useQuestions } from \"./useQuestions\";\n\ntype queueResponse = responseInterface<Question, any>;\n\ninterface UseStudentQuestionReturn {\n  studentQuestion?: queueResponse[\"data\"];\n  studentQuestionIndex?: number;\n  studentQuestionError: queueResponse[\"error\"];\n  mutateStudentQuestion: (q: Question) => void;\n}\n\n/**\n * SWR wrapper for the question of the currently logged-in student\n */\nexport function useStudentQuestion(qid: number): UseStudentQuestionReturn {\n  const profile = useProfile();\n  const { questions, questionsError, mutateQuestion } = useQuestions(qid);\n\n  const studentQuestion =\n    profile && questions && questions.find((q) => q.creator.id === profile.id);\n\n  const studentQuestionIndex =\n    studentQuestion &&\n    questions\n      .filter(\n        (question) =>\n          question.status !== OpenQuestionStatus.CantFind &&\n          question.status !== OpenQuestionStatus.TADeleted &&\n          question.status !== OpenQuestionStatus.Helping\n      )\n      .indexOf(studentQuestion);\n\n  return {\n    studentQuestion,\n    studentQuestionIndex,\n    studentQuestionError: questionsError,\n    mutateStudentQuestion: mutateQuestion,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}