{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Modal, notification } from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\nimport { NotionRenderer } from \"react-notion\";\nexport default function ReleaseNotes() {\n  const [releaseNotesLastSeen, setReleaseNotesLastSeen] = useLocalStorage(\"releaseNotesLastSeen\", null);\n  const {\n    0: releaseNotesLastUpdated,\n    1: setReleaseNotesLastUpdated\n  } = useState(0);\n  const {\n    0: notionReleaseNotes,\n    1: setNotionReleaseNotes\n  } = useState();\n  const {\n    0: showReleaseNotes,\n    1: setShowReleaseNotes\n  } = useState(false);\n  useEffect(() => {\n    fetch(\"https://notion-api.splitbee.io/v1/page/abba246bfa0847baa2706ab30d0c6c7d\").then(res => res.json()).then(result => {\n      try {\n        var _result$beae2a02249e, _result$beae2a02249e$, _result$beae2a02249e$2;\n\n        const timeText = (_result$beae2a02249e = result[\"beae2a02-249e-4b61-9bfc-81258d93f20d\"]) === null || _result$beae2a02249e === void 0 ? void 0 : (_result$beae2a02249e$ = _result$beae2a02249e.value) === null || _result$beae2a02249e$ === void 0 ? void 0 : (_result$beae2a02249e$2 = _result$beae2a02249e$.properties) === null || _result$beae2a02249e$2 === void 0 ? void 0 : _result$beae2a02249e$2.title[0][0];\n        setReleaseNotesLastUpdated(timeText.split(\"Unix \")[1] * 1000);\n      } catch (e) {\n        console.log(\"Error Parsing release notes time:\", e);\n      } // Remove the time block and page link block from page\n\n\n      result[\"beae2a02-249e-4b61-9bfc-81258d93f20d\"].value.properties.title = [];\n      result[\"4d25f393-e570-4cd5-ad66-b278a0924225\"].value.properties.title = [];\n      setNotionReleaseNotes(result);\n    }, error => {\n      console.log(\"Error fetching release notes\", error);\n    });\n  }, []);\n\n  if (!releaseNotesLastSeen && releaseNotesLastUpdated || new Date(releaseNotesLastSeen) < new Date(releaseNotesLastUpdated)) {\n    notification.open({\n      message: \"We've got new features/bug fixes\",\n      type: \"info\",\n      duration: 0,\n      description: \"Click to see what's new!\",\n      className: \"clickable-notification hide-in-percy\",\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: () => {\n        setShowReleaseNotes(true);\n        notification.destroy();\n      }\n    });\n    setReleaseNotesLastSeen(new Date());\n  }\n\n  const openLinksInNewTab = e => {\n    if (e.target.className === \"notion-link\") {\n      e.preventDefault();\n      window.open(e.target.href);\n    }\n  };\n\n  return __jsx(\"div\", {\n    onClick: openLinksInNewTab\n  }, notionReleaseNotes ? __jsx(Modal, {\n    title: \"Release Notes\",\n    visible: showReleaseNotes,\n    bodyStyle: {\n      padding: \"0px 24px\"\n    },\n    footer: __jsx(React.Fragment, null, __jsx(\"b\", null, \"Want to see more? \"), __jsx(\"a\", {\n      href: \"https://www.notion.so/Release-Notes-Archive-9a1a0eab073a463096fc3699bf48219c\"\n    }, \" \", \"Click here to view the archive\")),\n    width: 625,\n    onCancel: () => setShowReleaseNotes(false)\n  }, __jsx(NotionRenderer, {\n    blockMap: notionReleaseNotes\n  })) : null);\n}","map":null,"metadata":{},"sourceType":"module"}