{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport { isProd } from \"@koh/common\";\nimport { Menu, Popover } from \"antd\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useProfile } from \"../../hooks/useProfile\";\nimport AvatarWithInitals from \"../common/AvatarWithInitials\";\nimport { NotificationSettingsModal } from \"./NotificationSettingsModal\";\n\nvar StyleablePopover = function StyleablePopover(_ref) {\n  var className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"className\"]);\n\n  return __jsx(Popover, _extends({}, props, {\n    overlayClassName: className\n  }));\n};\n\nvar NoPaddingPopover = styled(StyleablePopover).withConfig({\n  displayName: \"Settings__NoPaddingPopover\",\n  componentId: \"qrr1if-0\"\n})([\"& .ant-popover-inner-content{padding:0px;}\"]);\nvar AvatarButton = styled.div.withConfig({\n  displayName: \"Settings__AvatarButton\",\n  componentId: \"qrr1if-1\"\n})([\"cursor:pointer;\"]);\nexport default function Settings() {\n  var profile = useProfile();\n\n  var _useState = useState(false),\n      isNotifOpen = _useState[0],\n      setIsNotifOpen = _useState[1];\n\n  var _useState2 = useState(false),\n      isPopoverOpen = _useState2[0],\n      setIsPopoverOpen = _useState2[1];\n\n  var loginPath = isProd() ? \"/login\" : \"/dev\";\n  return __jsx(React.Fragment, null, __jsx(NotificationSettingsModal, {\n    visible: isNotifOpen,\n    onClose: function onClose() {\n      return setIsNotifOpen(false);\n    }\n  }), __jsx(NoPaddingPopover, {\n    content: isPopoverOpen && __jsx(Menu, {\n      mode: \"inline\"\n    }, __jsx(Menu.Item, {\n      onClick: function onClick() {\n        setIsPopoverOpen(false);\n        setIsNotifOpen(true);\n      }\n    }, \"Notification Settings\")),\n    placement: \"bottomRight\",\n    trigger: \"click\",\n    visible: isPopoverOpen,\n    onVisibleChange: setIsPopoverOpen\n  }, __jsx(AvatarButton, null, //TODO: bring back photo URL && get rid of RegeX\n  //icon={<UserOutlined />} src={profile?.photoURL}\n  profile && __jsx(AvatarWithInitals, {\n    name: profile === null || profile === void 0 ? void 0 : profile.name,\n    size: 40,\n    fontSize: 16\n  }))));\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/components/Nav/Settings.tsx"],"names":["isProd","Menu","Popover","React","useState","styled","useProfile","AvatarWithInitals","NotificationSettingsModal","StyleablePopover","className","props","NoPaddingPopover","AvatarButton","div","Settings","profile","isNotifOpen","setIsNotifOpen","isPopoverOpen","setIsPopoverOpen","loginPath","name"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,aAAvB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,MAA9B;AACA,OAAOC,KAAP,IAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,SAASC,yBAAT,QAA0C,6BAA1C;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAiBC,KAAjB;;AAAA,SACvB,MAAC,OAAD,eAAaA,KAAb;AAAoB,IAAA,gBAAgB,EAAED;AAAtC,KADuB;AAAA,CAAzB;;AAGA,IAAME,gBAAgC,GAAGP,MAAM,CAACI,gBAAD,CAAT;AAAA;AAAA;AAAA,kDAAtC;AAMA,IAAMI,YAAY,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,uBAAlB;AAIA,eAAe,SAASC,QAAT,GAAkC;AAC/C,MAAMC,OAAO,GAAGV,UAAU,EAA1B;;AAD+C,kBAETF,QAAQ,CAAC,KAAD,CAFC;AAAA,MAExCa,WAFwC;AAAA,MAE3BC,cAF2B;;AAAA,mBAGLd,QAAQ,CAAC,KAAD,CAHH;AAAA,MAGxCe,aAHwC;AAAA,MAGzBC,gBAHyB;;AAI/C,MAAMC,SAAS,GAAGrB,MAAM,KAAK,QAAL,GAAgB,MAAxC;AAEA,SACE,4BACE,MAAC,yBAAD;AACE,IAAA,OAAO,EAAEiB,WADX;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMC,cAAc,CAAC,KAAD,CAApB;AAAA;AAFX,IADF,EAKE,MAAC,gBAAD;AACE,IAAA,OAAO,EACLC,aAAa,IACX,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,MAAC,IAAD,CAAM,IAAN;AACE,MAAA,OAAO,EAAE,mBAAM;AACbC,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAF,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AAJH,+BADF,CAHN;AAsBE,IAAA,SAAS,EAAC,aAtBZ;AAuBE,IAAA,OAAO,EAAC,OAvBV;AAwBE,IAAA,OAAO,EAAEC,aAxBX;AAyBE,IAAA,eAAe,EAAEC;AAzBnB,KA2BE,MAAC,YAAD,QAEI;AACA;AACAJ,EAAAA,OAAO,IACL,MAAC,iBAAD;AAAmB,IAAA,IAAI,EAAEA,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEM,IAAlC;AAAwC,IAAA,IAAI,EAAE,EAA9C;AAAkD,IAAA,QAAQ,EAAE;AAA5D,IALN,CA3BF,CALF,CADF;AA6CD","sourcesContent":["import { isProd } from \"@koh/common\";\nimport { Menu, Popover } from \"antd\";\nimport React, { ReactElement, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useProfile } from \"../../hooks/useProfile\";\nimport AvatarWithInitals from \"../common/AvatarWithInitials\";\nimport { NotificationSettingsModal } from \"./NotificationSettingsModal\";\n\nconst StyleablePopover = ({ className, ...props }: { className: string }) => (\n  <Popover {...props} overlayClassName={className} />\n);\nconst NoPaddingPopover: typeof Popover = styled(StyleablePopover)`\n  & .ant-popover-inner-content {\n    padding: 0px;\n  }\n`;\n\nconst AvatarButton = styled.div`\n  cursor: pointer;\n`;\n\nexport default function Settings(): ReactElement {\n  const profile = useProfile();\n  const [isNotifOpen, setIsNotifOpen] = useState(false);\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n  const loginPath = isProd() ? \"/login\" : \"/dev\";\n\n  return (\n    <>\n      <NotificationSettingsModal\n        visible={isNotifOpen}\n        onClose={() => setIsNotifOpen(false)}\n      />\n      <NoPaddingPopover\n        content={\n          isPopoverOpen && (\n            <Menu mode=\"inline\">\n              <Menu.Item\n                onClick={() => {\n                  setIsPopoverOpen(false);\n                  setIsNotifOpen(true);\n                }}\n              >\n                Notification Settings\n              </Menu.Item>\n              {/* \n              TODO: Add this back when we add logout endpoint\n              <Menu.Item>\n                <Link href={loginPath} as={loginPath}>\n                  <a>Logout</a>\n                </Link>\n              </Menu.Item> */}\n            </Menu>\n          )\n        }\n        placement=\"bottomRight\"\n        trigger=\"click\"\n        visible={isPopoverOpen}\n        onVisibleChange={setIsPopoverOpen}\n      >\n        <AvatarButton>\n          {\n            //TODO: bring back photo URL && get rid of RegeX\n            //icon={<UserOutlined />} src={profile?.photoURL}\n            profile && (\n              <AvatarWithInitals name={profile?.name} size={40} fontSize={16} />\n            )\n          }\n        </AvatarButton>\n      </NoPaddingPopover>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}