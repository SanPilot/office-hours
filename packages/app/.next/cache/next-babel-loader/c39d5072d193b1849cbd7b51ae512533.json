{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { API } from \"@koh/api-client\";\nimport { Button } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nimport { useCourse } from \"../../hooks/useCourse\";\nimport { useProfile } from \"../../hooks/useProfile\";\nconst CheckinButton = styled(Button).withConfig({\n  displayName: \"TACheckinButton__CheckinButton\",\n  componentId: \"oiahss-0\"\n})([\"background:#2a9187;border-radius:6px;color:white;font-weight:500;font-size:14px;\"]);\nconst CheckOutButton = styled(Button).withConfig({\n  displayName: \"TACheckinButton__CheckOutButton\",\n  componentId: \"oiahss-1\"\n})([\"color:#da3236;font-weight:500;font-size:14px;border-radius:6px;\"]);\nexport default function TACheckinButton({\n  courseId\n}) {\n  const router = useRouter();\n  const {\n    course,\n    mutateCourse\n  } = useCourse(courseId);\n  const {\n    id\n  } = useProfile();\n  const queueCheckedIn = course === null || course === void 0 ? void 0 : course.queues.find(queue => queue.staffList.find(staff => staff.id === id));\n\n  async function checkInTA() {\n    // to see old check in in person functionality look at commit b4768bbfb0f36444c80961703bdbba01ff4a5596\n    //trying to limit changes to the frontend, all queues will have the room online\n    const redirectID = await API.taStatus.checkIn(courseId, \"Online\");\n    router.push(\"/course/[cid]/queue/[qid]\", `/course/${courseId}/queue/${redirectID.id}`);\n  }\n\n  return __jsx(React.Fragment, null, queueCheckedIn ? __jsx(CheckOutButton, {\n    type: \"default\",\n    size: \"large\",\n    \"data-cy\": \"check-out-button\",\n    onClick: async () => {\n      await API.taStatus.checkOut(courseId, \"Online\");\n      mutateCourse();\n    }\n  }, \"Check Out\") : __jsx(CheckinButton, {\n    type: \"default\",\n    size: \"large\",\n    onClick: () => checkInTA(),\n    disabled: !course,\n    \"data-cy\": \"check-in-button\"\n  }, \"Check In\"));\n}","map":null,"metadata":{},"sourceType":"module"}