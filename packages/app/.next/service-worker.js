try{self["workbox:core:5.1.3"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:5.1.3"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class a{constructor(e,t,a="GET"){this.handler=s(t),this.match=e,this.method=a}}class n extends a{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}const c=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),"");class i{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:a,route:n}=this.findMatchingRoute({url:s,request:e,event:t});let c,i=n&&n.handler;if(!i&&this.s&&(i=this.s),i){try{c=i.handle({url:s,request:e,event:t,params:a})}catch(e){c=Promise.reject(e)}return c instanceof Promise&&this.i&&(c=c.catch(a=>this.i.handle({url:s,request:e,event:t}))),c}}findMatchingRoute({url:e,request:t,event:s}){const a=this.t.get(t.method)||[];for(const n of a){let a;const c=n.match({url:e,request:t,event:s});if(c)return a=c,(Array.isArray(c)&&0===c.length||c.constructor===Object&&0===Object.keys(c).length||"boolean"==typeof c)&&(a=void 0),{route:n,params:a}}return{}}setDefaultHandler(e){this.s=s(e)}setCatchHandler(e){this.i=s(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this.t.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(s,1)}}let r;const o=()=>(r||(r=new i,r.addFetchListener(),r.addCacheListener()),r);const f={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},u=e=>[f.prefix,e,f.suffix].filter(e=>e&&e.length>0).join("-"),h=e=>e||u(f.precache),d=e=>e||u(f.runtime);function l(e){e.then(()=>{})}const b=new Set;class w{constructor(e,t,{onupgradeneeded:s,onversionchange:a}={}){this.o=null,this.u=e,this.h=t,this.l=s,this.p=a||(()=>this.close())}get db(){return this.o}async open(){if(!this.o)return this.o=await new Promise((e,t)=>{let s=!1;setTimeout(()=>{s=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const a=indexedDB.open(this.u,this.h);a.onerror=()=>t(a.error),a.onupgradeneeded=e=>{s?(a.transaction.abort(),a.result.close()):"function"==typeof this.l&&this.l(e)},a.onsuccess=()=>{const t=a.result;s?t.close():(t.onversionchange=this.p.bind(this),e(t))}}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,s){return await this.getAllMatching(e,{query:t,count:s})}async getAllKeys(e,t,s){return(await this.getAllMatching(e,{query:t,count:s,includeKeys:!0})).map(e=>e.key)}async getAllMatching(e,{index:t,query:s=null,direction:a="next",count:n,includeKeys:c=!1}={}){return await this.transaction([e],"readonly",(i,r)=>{const o=i.objectStore(e),f=t?o.index(t):o,u=[],h=f.openCursor(s,a);h.onsuccess=()=>{const e=h.result;e?(u.push(c?e:e.value),n&&u.length>=n?r(u):e.continue()):r(u)}})}async transaction(e,t,s){return await this.open(),await new Promise((a,n)=>{const c=this.o.transaction(e,t);c.onabort=()=>n(c.error),c.oncomplete=()=>a(),s(c,e=>a(e))})}async m(e,t,s,...a){return await this.transaction([t],s,(s,n)=>{const c=s.objectStore(t),i=c[e].apply(c,a);i.onsuccess=()=>n(i.result)})}close(){this.o&&(this.o.close(),this.o=null)}}w.prototype.OPEN_TIMEOUT=2e3;const p={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(p))for(const s of t)s in IDBObjectStore.prototype&&(w.prototype[s]=async function(t,...a){return await this.m(s,t,e,...a)});try{self["workbox:expiration:5.1.3"]&&_()}catch(e){}const m=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class y{constructor(e){this.g=e,this.o=new w("workbox-expiration",1,{onupgradeneeded:e=>this.v(e)})}v(e){const t=e.target.result.createObjectStore("cache-entries",{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1}),(async e=>{await new Promise((t,s)=>{const a=indexedDB.deleteDatabase(e);a.onerror=()=>{s(a.error)},a.onblocked=()=>{s(new Error("Delete blocked"))},a.onsuccess=()=>{t()}})})(this.g)}async setTimestamp(e,t){const s={url:e=m(e),timestamp:t,cacheName:this.g,id:this._(e)};await this.o.put("cache-entries",s)}async getTimestamp(e){return(await this.o.get("cache-entries",this._(e))).timestamp}async expireEntries(e,t){const s=await this.o.transaction("cache-entries","readwrite",(s,a)=>{const n=s.objectStore("cache-entries").index("timestamp").openCursor(null,"prev"),c=[];let i=0;n.onsuccess=()=>{const s=n.result;if(s){const a=s.value;a.cacheName===this.g&&(e&&a.timestamp<e||t&&i>=t?c.push(s.value):i++),s.continue()}else a(c)}}),a=[];for(const e of s)await this.o.delete("cache-entries",e.id),a.push(e.url);return a}_(e){return this.g+"|"+m(e)}}class g{constructor(e,t={}){this.q=!1,this.j=!1,this.R=t.maxEntries,this.k=t.maxAgeSeconds,this.g=e,this.U=new y(e)}async expireEntries(){if(this.q)return void(this.j=!0);this.q=!0;const e=this.k?Date.now()-1e3*this.k:0,t=await this.U.expireEntries(e,this.R),s=await self.caches.open(this.g);for(const e of t)await s.delete(e);this.q=!1,this.j&&(this.j=!1,l(this.expireEntries()))}async updateTimestamp(e){await this.U.setTimestamp(e,Date.now())}async isURLExpired(e){if(this.k){return await this.U.getTimestamp(e)<Date.now()-1e3*this.k}return!1}async delete(){this.j=!1,await this.U.expireEntries(1/0)}}const v=(e,t)=>e.filter(e=>t in e),x=async({request:e,mode:t,plugins:s=[]})=>{const a=v(s,"cacheKeyWillBeUsed");let n=e;for(const e of a)n=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:n}),"string"==typeof n&&(n=new Request(n));return n},q=async({cacheName:e,request:t,event:s,matchOptions:a,plugins:n=[]})=>{const c=await self.caches.open(e),i=await x({plugins:n,request:t,mode:"read"});let r=await c.match(i,a);for(const t of n)if("cachedResponseWillBeUsed"in t){const n=t.cachedResponseWillBeUsed;r=await n.call(t,{cacheName:e,event:s,matchOptions:a,cachedResponse:r,request:i})}return r},j=async({cacheName:e,request:s,response:a,event:n,plugins:i=[],matchOptions:r})=>{const o=await x({plugins:i,request:s,mode:"write"});if(!a)throw new t("cache-put-with-no-response",{url:c(o.url)});const f=await(async({request:e,response:t,event:s,plugins:a=[]})=>{let n=t,c=!1;for(const t of a)if("cacheWillUpdate"in t){c=!0;const a=t.cacheWillUpdate;if(n=await a.call(t,{request:e,response:n,event:s}),!n)break}return c||(n=n&&200===n.status?n:void 0),n||null})({event:n,plugins:i,response:a,request:o});if(!f)return;const u=await self.caches.open(e),h=v(i,"cacheDidUpdate"),d=h.length>0?await q({cacheName:e,matchOptions:r,request:o}):null;try{await u.put(o,f)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of b)await e()}(),e}for(const t of h)await t.cacheDidUpdate.call(t,{cacheName:e,event:n,oldResponse:d,newResponse:f,request:o})},R=q,k=async({request:e,fetchOptions:s,event:a,plugins:n=[]})=>{if("string"==typeof e&&(e=new Request(e)),a instanceof FetchEvent&&a.preloadResponse){const e=await a.preloadResponse;if(e)return e}const c=v(n,"fetchDidFail"),i=c.length>0?e.clone():null;try{for(const t of n)if("requestWillFetch"in t){const s=t.requestWillFetch,n=e.clone();e=await s.call(t,{request:n,event:a})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const r=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of n)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:a,request:r,response:t}));return t}catch(e){for(const t of c)await t.fetchDidFail.call(t,{error:e,event:a,originalRequest:i.clone(),request:r.clone()});throw e}};try{self["workbox:strategies:5.1.3"]&&_()}catch(e){}const U={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};let L;async function T(e,t){const s=e.clone(),a={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},n=t?t(a):a,c=function(){if(void 0===L){const e=new Response("");if("body"in e)try{new Response(e.body),L=!0}catch(e){L=!1}L=!1}return L}()?s.body:await s.blob();return new Response(c,n)}try{self["workbox:precaching:5.1.3"]&&_()}catch(e){}function I(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),c=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:c.href}}class N{constructor(e){this.g=h(e),this.L=new Map,this.T=new Map,this.I=new Map}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=I(a),c="string"!=typeof a&&a.revision?"reload":"default";if(this.L.has(n)&&this.L.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.L.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this.I.has(e)&&this.I.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this.I.set(e,a.integrity)}if(this.L.set(n,e),this.T.set(n,c),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],a=[],n=await self.caches.open(this.g),c=await n.keys(),i=new Set(c.map(e=>e.url));for(const[e,t]of this.L)i.has(t)?a.push(e):s.push({cacheKey:t,url:e});const r=s.map(({cacheKey:s,url:a})=>{const n=this.I.get(s),c=this.T.get(a);return this.N({cacheKey:s,cacheMode:c,event:e,integrity:n,plugins:t,url:a})});await Promise.all(r);return{updatedURLs:s.map(e=>e.url),notUpdatedURLs:a}}async activate(){const e=await self.caches.open(this.g),t=await e.keys(),s=new Set(this.L.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}async N({cacheKey:e,url:s,cacheMode:a,event:n,plugins:c,integrity:i}){const r=new Request(s,{integrity:i,cache:a,credentials:"same-origin"});let o,f=await k({event:n,plugins:c,request:r});for(const e of c||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:n,request:r,response:f}):f.status<400))throw new t("bad-precaching-response",{url:s,status:f.status});f.redirected&&(f=await T(f)),await j({event:n,plugins:c,response:f,request:e===s?r:new Request(e),cacheName:this.g,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.L}getCachedURLs(){return[...this.L.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.L.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.g)).match(s)}}createHandler(e=!0){return async({request:s})=>{try{const e=await this.matchPrecache(s);if(e)return e;throw new t("missing-precache-entry",{cacheName:this.g,url:s instanceof Request?s.url:s})}catch(t){if(e)return fetch(s);throw t}}}createHandlerBoundToURL(e,s=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const a=this.createHandler(s),n=new Request(e);return()=>a({request:n})}}let E;const F=()=>(E||(E=new N),E);const M=(e,t)=>{const s=F().getURLsToCacheKeys();for(const a of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:a,urlManipulation:n}={}){const c=new URL(e,location.href);c.hash="",yield c.href;const i=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(c,t);if(yield i.href,s&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=s,yield e.href}if(a){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(n){const e=n({url:c});for(const t of e)yield t.href}}(e,t)){const e=s.get(a);if(e)return e}};let K=!1;function P(e){K||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:a}={})=>{const n=h();self.addEventListener("fetch",c=>{const i=M(c.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:a});if(!i)return;let r=self.caches.open(n).then(e=>e.match(i)).then(e=>e||fetch(i));c.respondWith(r)})})(e),K=!0)}const O=[],D={get:()=>O,add(e){O.push(...e)}},V=e=>{const t=F(),s=D.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},C=e=>{const t=F();e.waitUntil(t.activate())};var A;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),A={},function(e){F().addToCacheList(e),e.length>0&&(self.addEventListener("install",V),self.addEventListener("activate",C))}([{url:"_next/static/V1FI8kthmLfjTallTUhmb/_buildManifest.js",revision:"c3ba41dc4c7af455db4ddbd5baa0ea67"},{url:"_next/static/V1FI8kthmLfjTallTUhmb/_ssgManifest.js",revision:"abee47769bf307639ace4945f9cfd4ff"},{url:"_next/static/V1FI8kthmLfjTallTUhmb/pages/_app.js",revision:"ab581b762b5f57fff1bc705975dc8400"},{url:"_next/static/V1FI8kthmLfjTallTUhmb/pages/_error.js",revision:"5c49b028d36ac8e00c0cee0f29299795"},{url:"_next/static/V1FI8kthmLfjTallTUhmb/pages/course/[cid]/course_overrides.js",revision:"0b9cdf0643f04cf024fdb8ebd6bdba64"},{url:"_next/static/V1FI8kthmLfjTallTUhmb/pages/course/[cid]/insights.js",revision:"89a12c726ea32da69224164bc348acff"},{url:"_next/static/V1FI8kthmLfjTallTUhmb/pages/course/[cid]/queue/[qid].js",revision:"aa44e4005f02f8baa556ace5bbf8ce92"},{url:"_next/static/V1FI8kthmLfjTallTUhmb/pages/course/[cid]/schedule.js",revision:"68a8f00fb9dd4f32737de5b2e964042e"},{url:"_next/static/V1FI8kthmLfjTallTUhmb/pages/course/[cid]/today.js",revision:"17cb926587654f811809bbac34d04afa"},{url:"_next/static/V1FI8kthmLfjTallTUhmb/pages/dev.js",revision:"33ece3a619260ecd60e271374caeb2f3"},{url:"_next/static/V1FI8kthmLfjTallTUhmb/pages/index.js",revision:"7659c65d330d2a6141f5a5e8233f215c"},{url:"_next/static/V1FI8kthmLfjTallTUhmb/pages/login.js",revision:"b0cbf6b23114dae4626f7aca4dcbbddb"},{url:"_next/static/V1FI8kthmLfjTallTUhmb/pages/nocourses.js",revision:"710bb42c63e93f25cae668ad7749bc77"},{url:"_next/static/V1FI8kthmLfjTallTUhmb/pages/settings.js",revision:"cea34210ac9ebb833637a69e66a35ceb"},{url:"_next/static/chunks/033253a62aea220da2c607db11b7d10a4292d5a7.a463ca41cdf23c5f7945.js",revision:"568165f71abc3f651d34883d898d7db4"},{url:"_next/static/chunks/086fa283ac432c36b8fe7dac8a51c957d6efbffd.0a89acbb279fecdb6796.js",revision:"a2541e0420bb5565fbe9b66dbca23c94"},{url:"_next/static/chunks/1030691aa5f9ef59a6634fa08b4f558c7160835d.906f7f4c95a95e0e27c5.js",revision:"d190e2ac51a13d45b550bc89e5a9adcb"},{url:"_next/static/chunks/116879e31ffe5be1965c05405c544859a7e3465d.a147d95fa19ba160c75e.js",revision:"0fca7f90118fd37d111523c643776cc2"},{url:"_next/static/chunks/29107295.83380683736fba217ef5.js",revision:"c6272f4490bab22bd9987fbd64aa5ce0"},{url:"_next/static/chunks/3300687b606b72ac9c78a8a8b6865b26af7ff466.a56a1b1a2afbd8390394.js",revision:"501eebfa46e96b90aa04c4b9681806ac"},{url:"_next/static/chunks/370eafba940ee39a567e0be0e26c1c2ef3291d31.4b5eac7de51be9ca16be.js",revision:"202e90651ca92ee904a22aadc83d55eb"},{url:"_next/static/chunks/3b70ed9fe0aceb20d76f9b3219f2043f8da5dafa.1637bb55b25c38c66f0e.js",revision:"45663eac20773f1dbd9b1c03f3da43c1"},{url:"_next/static/chunks/40.f9ca7b250faaa96f298e.js",revision:"a2dff99990b4fdf6a51a51aa03174da8"},{url:"_next/static/chunks/40a3a7a0b44dd59aa8bc0ad8c69a0c67e0728f45.352f7c8056f2fb4defb9.js",revision:"05e5fc8334f3f85febc364bc79e1cb58"},{url:"_next/static/chunks/53aeea766353d0d85dcad887bd3c563ba119e3c4.70f4699df0a06c09c867.js",revision:"f743e9e450e4ed686ba948988ad1d136"},{url:"_next/static/chunks/659fbf1d84f5db914008a0d8c9d87dbc70d1862e.68abebd9e3f253757b1e.js",revision:"9594d0343058357aaf1ca3d60038be55"},{url:"_next/static/chunks/777bb0c2e52f244ac7189d0238b4f1c1f8ebb2ab.0b6be8f9b77e8ffd13d2.js",revision:"edc105a1fafbaade23fa77e6566e37c1"},{url:"_next/static/chunks/7c16e475b30094ec0a1c5c8cb3c702c7b2d7f07e.9e78df20f67c29059dd9.js",revision:"ade62a447b6870bf02a54e2dfac51a9e"},{url:"_next/static/chunks/7dc647609f37e0a418e751bc7a1188dbc2e2e336.f2e67246d9730ca64ff7.js",revision:"b4be81df5122abc01af10bdecdd977b9"},{url:"_next/static/chunks/84795d07d34f1468fd52cea827a9da1fa92818b3.9708f84493aff45b242d.js",revision:"e48d6c474bb2080545f222d052935e7e"},{url:"_next/static/chunks/94ba625cd5e2c9e98ee543707f87b6db4570670e.2fd77cefa0a24ab00353.js",revision:"05bacf0fdbf13659f924f4576514beeb"},{url:"_next/static/chunks/a29ae703.42bd497555d899daf3d4.js",revision:"d9b24a664a7b32dc0e464367e545693e"},{url:"_next/static/chunks/b643ff52c8dcf421f1ce5dc2e9412e3373a839c9.f9719ccd43d50852a44e.js",revision:"6194f5375f76acd60dca67ee6a7b49e6"},{url:"_next/static/chunks/c96b4d7e.9c384f25ae56ea0edd41.js",revision:"108c4d2e11d7c8a51d75dee34fac1086"},{url:"_next/static/chunks/commons.16820b70197c7b14c37e.js",revision:"dfd901f11ce70ed31c4c2a2bc8c99c94"},{url:"_next/static/chunks/eba803da0462bfa0742a0db6064b8ce591719d90.a19e18f911bef145edcd.js",revision:"d45270a3f02cb8340d6cd7c980b5d472"},{url:"_next/static/chunks/edbaeae11e5cf4a9e447991f1f5ad08f5f2b8951.475aa6618c25f93d0df1.js",revision:"ebfeba773dc8a696423621224aa80386"},{url:"_next/static/chunks/fc8d00fd.ede116608e6bcbcfc1c8.js",revision:"2f71978ad021682a6a06a5b25ea8e507"},{url:"_next/static/chunks/ff27ddb4702cb119d37daa9b31ea1f32cd31b14f.bdc7301bce6a78af3abf.js",revision:"fd7481433ad2f80fc580522be96606ff"},{url:"_next/static/chunks/framework.c06ceb3f90185a0b4876.js",revision:"768f6e3921275b08d5e9b59c13c72111"},{url:"_next/static/css/0b10e9f32b7d87c5b5ed.css",revision:"9b6bf2b0849057358aaaeb0dd19e37db"},{url:"_next/static/css/20de8917c44a516a459d.css",revision:"9a8cd95b5f951cd1c4dfc2843aaa0909"},{url:"_next/static/runtime/main-71e1eaa5dfb9075b6dfe.js",revision:"280a0fc01c6a4fb50275b8327f3c4247"},{url:"_next/static/runtime/polyfills-4d633bb2a1714bbcee91.js",revision:"0d6e723ecee12a2956fd84a51f0cf762"},{url:"_next/static/runtime/webpack-6368c3e0defaa83452ed.js",revision:"766a7dd9a4590a4ea96e141592a5fe26"}]),P(A),function(e,s,c){let i;if("string"==typeof e){const t=new URL(e,location.href);i=new a(({url:e})=>e.href===t.href,s,c)}else if(e instanceof RegExp)i=new n(e,s,c);else if("function"==typeof e)i=new a(e,s,c);else{if(!(e instanceof a))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});i=e}o().registerRoute(i)}(/^https?.*/,new class{constructor(e={}){if(this.g=d(e.cacheName),e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this.F=t?e.plugins:[U,...e.plugins]}else this.F=[U];this.M=e.networkTimeoutSeconds||0,this.K=e.fetchOptions,this.P=e.matchOptions}async handle({event:e,request:s}){const a=[];"string"==typeof s&&(s=new Request(s));const n=[];let c;if(this.M){const{id:t,promise:i}=this.O({request:s,event:e,logs:a});c=t,n.push(i)}const i=this.D({timeoutId:c,request:s,event:e,logs:a});n.push(i);let r=await Promise.race(n);if(r||(r=await i),!r)throw new t("no-response",{url:s.url});return r}O({request:e,logs:t,event:s}){let a;return{promise:new Promise(t=>{a=setTimeout(async()=>{t(await this.V({request:e,event:s}))},1e3*this.M)}),id:a}}async D({timeoutId:e,request:t,logs:s,event:a}){let n,c;try{c=await k({request:t,event:a,fetchOptions:this.K,plugins:this.F})}catch(e){n=e}if(e&&clearTimeout(e),n||!c)c=await this.V({request:t,event:a});else{const e=c.clone(),s=j({cacheName:this.g,request:t,response:e,event:a,plugins:this.F});if(a)try{a.waitUntil(s)}catch(e){}}return c}V({event:e,request:t}){return R({cacheName:this.g,request:t,event:e,matchOptions:this.P,plugins:this.F})}}({cacheName:"offlineCache",plugins:[new class{constructor(e={}){var t;this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:a})=>{if(!a)return null;const n=this.C(a),c=this.A(s);l(c.expireEntries());const i=c.updateTimestamp(t.url);if(e)try{e.waitUntil(i)}catch(e){}return n?a:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this.A(e);await s.updateTimestamp(t.url),await s.expireEntries()},this.S=e,this.k=e.maxAgeSeconds,this.W=new Map,e.purgeOnQuotaError&&(t=()=>this.deleteCacheAndMetadata(),b.add(t))}A(e){if(e===d())throw new t("expire-custom-caches-only");let s=this.W.get(e);return s||(s=new g(e,this.S),this.W.set(e,s)),s}C(e){if(!this.k)return!0;const t=this.B(e);if(null===t)return!0;return t>=Date.now()-1e3*this.k}B(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this.W)await self.caches.delete(e),await t.delete();this.W=new Map}}({maxEntries:200,purgeOnQuotaError:!0})]}),"GET");
//# sourceMappingURL=service-worker.js.map
