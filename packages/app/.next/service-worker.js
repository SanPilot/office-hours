try{self["workbox:core:5.1.3"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:5.1.3"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class n{constructor(e,t,n="GET"){this.handler=s(t),this.match=e,this.method=n}}class a extends n{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}const i=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),"");class c{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:a}=this.findMatchingRoute({url:s,request:e,event:t});let i,c=a&&a.handler;if(!c&&this.s&&(c=this.s),c){try{i=c.handle({url:s,request:e,event:t,params:n})}catch(e){i=Promise.reject(e)}return i instanceof Promise&&this.i&&(i=i.catch(n=>this.i.handle({url:s,request:e,event:t}))),i}}findMatchingRoute({url:e,request:t,event:s}){const n=this.t.get(t.method)||[];for(const a of n){let n;const i=a.match({url:e,request:t,event:s});if(i)return n=i,(Array.isArray(i)&&0===i.length||i.constructor===Object&&0===Object.keys(i).length||"boolean"==typeof i)&&(n=void 0),{route:a,params:n}}return{}}setDefaultHandler(e){this.s=s(e)}setCatchHandler(e){this.i=s(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this.t.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(s,1)}}let r;const o=()=>(r||(r=new c,r.addFetchListener(),r.addCacheListener()),r);const u={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},f=e=>[u.prefix,e,u.suffix].filter(e=>e&&e.length>0).join("-"),h=e=>e||f(u.precache),d=e=>e||f(u.runtime);function l(e){e.then(()=>{})}const b=new Set;class w{constructor(e,t,{onupgradeneeded:s,onversionchange:n}={}){this.o=null,this.u=e,this.h=t,this.l=s,this.p=n||(()=>this.close())}get db(){return this.o}async open(){if(!this.o)return this.o=await new Promise((e,t)=>{let s=!1;setTimeout(()=>{s=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const n=indexedDB.open(this.u,this.h);n.onerror=()=>t(n.error),n.onupgradeneeded=e=>{s?(n.transaction.abort(),n.result.close()):"function"==typeof this.l&&this.l(e)},n.onsuccess=()=>{const t=n.result;s?t.close():(t.onversionchange=this.p.bind(this),e(t))}}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,s){return await this.getAllMatching(e,{query:t,count:s})}async getAllKeys(e,t,s){return(await this.getAllMatching(e,{query:t,count:s,includeKeys:!0})).map(e=>e.key)}async getAllMatching(e,{index:t,query:s=null,direction:n="next",count:a,includeKeys:i=!1}={}){return await this.transaction([e],"readonly",(c,r)=>{const o=c.objectStore(e),u=t?o.index(t):o,f=[],h=u.openCursor(s,n);h.onsuccess=()=>{const e=h.result;e?(f.push(i?e:e.value),a&&f.length>=a?r(f):e.continue()):r(f)}})}async transaction(e,t,s){return await this.open(),await new Promise((n,a)=>{const i=this.o.transaction(e,t);i.onabort=()=>a(i.error),i.oncomplete=()=>n(),s(i,e=>n(e))})}async g(e,t,s,...n){return await this.transaction([t],s,(s,a)=>{const i=s.objectStore(t),c=i[e].apply(i,n);c.onsuccess=()=>a(c.result)})}close(){this.o&&(this.o.close(),this.o=null)}}w.prototype.OPEN_TIMEOUT=2e3;const p={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(p))for(const s of t)s in IDBObjectStore.prototype&&(w.prototype[s]=async function(t,...n){return await this.g(s,t,e,...n)});try{self["workbox:expiration:5.1.3"]&&_()}catch(e){}const y=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class g{constructor(e){this.v=e,this.o=new w("workbox-expiration",1,{onupgradeneeded:e=>this.m(e)})}m(e){const t=e.target.result.createObjectStore("cache-entries",{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1}),(async e=>{await new Promise((t,s)=>{const n=indexedDB.deleteDatabase(e);n.onerror=()=>{s(n.error)},n.onblocked=()=>{s(new Error("Delete blocked"))},n.onsuccess=()=>{t()}})})(this.v)}async setTimestamp(e,t){const s={url:e=y(e),timestamp:t,cacheName:this.v,id:this._(e)};await this.o.put("cache-entries",s)}async getTimestamp(e){return(await this.o.get("cache-entries",this._(e))).timestamp}async expireEntries(e,t){const s=await this.o.transaction("cache-entries","readwrite",(s,n)=>{const a=s.objectStore("cache-entries").index("timestamp").openCursor(null,"prev"),i=[];let c=0;a.onsuccess=()=>{const s=a.result;if(s){const n=s.value;n.cacheName===this.v&&(e&&n.timestamp<e||t&&c>=t?i.push(s.value):c++),s.continue()}else n(i)}}),n=[];for(const e of s)await this.o.delete("cache-entries",e.id),n.push(e.url);return n}_(e){return this.v+"|"+y(e)}}class v{constructor(e,t={}){this.q=!1,this.R=!1,this.j=t.maxEntries,this.U=t.maxAgeSeconds,this.v=e,this.L=new g(e)}async expireEntries(){if(this.q)return void(this.R=!0);this.q=!0;const e=this.U?Date.now()-1e3*this.U:0,t=await this.L.expireEntries(e,this.j),s=await self.caches.open(this.v);for(const e of t)await s.delete(e);this.q=!1,this.R&&(this.R=!1,l(this.expireEntries()))}async updateTimestamp(e){await this.L.setTimestamp(e,Date.now())}async isURLExpired(e){if(this.U){return await this.L.getTimestamp(e)<Date.now()-1e3*this.U}return!1}async delete(){this.R=!1,await this.L.expireEntries(1/0)}}const m=(e,t)=>e.filter(e=>t in e),x=async({request:e,mode:t,plugins:s=[]})=>{const n=m(s,"cacheKeyWillBeUsed");let a=e;for(const e of n)a=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:a}),"string"==typeof a&&(a=new Request(a));return a},q=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:a=[]})=>{const i=await self.caches.open(e),c=await x({plugins:a,request:t,mode:"read"});let r=await i.match(c,n);for(const t of a)if("cachedResponseWillBeUsed"in t){const a=t.cachedResponseWillBeUsed;r=await a.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:r,request:c})}return r},R=async({cacheName:e,request:s,response:n,event:a,plugins:c=[],matchOptions:r})=>{const o=await x({plugins:c,request:s,mode:"write"});if(!n)throw new t("cache-put-with-no-response",{url:i(o.url)});const u=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let a=t,i=!1;for(const t of n)if("cacheWillUpdate"in t){i=!0;const n=t.cacheWillUpdate;if(a=await n.call(t,{request:e,response:a,event:s}),!a)break}return i||(a=a&&200===a.status?a:void 0),a||null})({event:a,plugins:c,response:n,request:o});if(!u)return;const f=await self.caches.open(e),h=m(c,"cacheDidUpdate"),d=h.length>0?await q({cacheName:e,matchOptions:r,request:o}):null;try{await f.put(o,u)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of b)await e()}(),e}for(const t of h)await t.cacheDidUpdate.call(t,{cacheName:e,event:a,oldResponse:d,newResponse:u,request:o})},j=q,U=async({request:e,fetchOptions:s,event:n,plugins:a=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const i=m(a,"fetchDidFail"),c=i.length>0?e.clone():null;try{for(const t of a)if("requestWillFetch"in t){const s=t.requestWillFetch,a=e.clone();e=await s.call(t,{request:a,event:n})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const r=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of a)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:n,request:r,response:t}));return t}catch(e){for(const t of i)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:c.clone(),request:r.clone()});throw e}};try{self["workbox:strategies:5.1.3"]&&_()}catch(e){}const L={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};let M;async function k(e,t){const s=e.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},a=t?t(n):n,i=function(){if(void 0===M){const e=new Response("");if("body"in e)try{new Response(e.body),M=!0}catch(e){M=!1}M=!1}return M}()?s.body:await s.blob();return new Response(i,a)}try{self["workbox:precaching:5.1.3"]&&_()}catch(e){}function K(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const a=new URL(n,location.href),i=new URL(n,location.href);return a.searchParams.set("__WB_REVISION__",s),{cacheKey:a.href,url:i.href}}class O{constructor(e){this.v=h(e),this.M=new Map,this.k=new Map,this.K=new Map}addToCacheList(e){const s=[];for(const n of e){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:a}=K(n),i="string"!=typeof n&&n.revision?"reload":"default";if(this.M.has(a)&&this.M.get(a)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.M.get(a),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.K.has(e)&&this.K.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:a});this.K.set(e,n.integrity)}if(this.M.set(a,e),this.k.set(a,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],n=[],a=await self.caches.open(this.v),i=await a.keys(),c=new Set(i.map(e=>e.url));for(const[e,t]of this.M)c.has(t)?n.push(e):s.push({cacheKey:t,url:e});const r=s.map(({cacheKey:s,url:n})=>{const a=this.K.get(s),i=this.k.get(n);return this.O({cacheKey:s,cacheMode:i,event:e,integrity:a,plugins:t,url:n})});await Promise.all(r);return{updatedURLs:s.map(e=>e.url),notUpdatedURLs:n}}async activate(){const e=await self.caches.open(this.v),t=await e.keys(),s=new Set(this.M.values()),n=[];for(const a of t)s.has(a.url)||(await e.delete(a),n.push(a.url));return{deletedURLs:n}}async O({cacheKey:e,url:s,cacheMode:n,event:a,plugins:i,integrity:c}){const r=new Request(s,{integrity:c,cache:n,credentials:"same-origin"});let o,u=await U({event:a,plugins:i,request:r});for(const e of i||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:a,request:r,response:u}):u.status<400))throw new t("bad-precaching-response",{url:s,status:u.status});u.redirected&&(u=await k(u)),await R({event:a,plugins:i,response:u,request:e===s?r:new Request(e),cacheName:this.v,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.M}getCachedURLs(){return[...this.M.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.M.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.v)).match(s)}}createHandler(e=!0){return async({request:s})=>{try{const e=await this.matchPrecache(s);if(e)return e;throw new t("missing-precache-entry",{cacheName:this.v,url:s instanceof Request?s.url:s})}catch(t){if(e)return fetch(s);throw t}}}createHandlerBoundToURL(e,s=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const n=this.createHandler(s),a=new Request(e);return()=>n({request:a})}}let D;const N=()=>(D||(D=new O),D);const S=(e,t)=>{const s=N().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:a}={}){const i=new URL(e,location.href);i.hash="",yield i.href;const c=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(i,t);if(yield c.href,s&&c.pathname.endsWith("/")){const e=new URL(c.href);e.pathname+=s,yield e.href}if(n){const e=new URL(c.href);e.pathname+=".html",yield e.href}if(a){const e=a({url:i});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let E=!1;function W(e){E||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const a=h();self.addEventListener("fetch",i=>{const c=S(i.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!c)return;let r=self.caches.open(a).then(e=>e.match(c)).then(e=>e||fetch(c));i.respondWith(r)})})(e),E=!0)}const B=[],T={get:()=>B,add(e){B.push(...e)}},P=e=>{const t=N(),s=T.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},Q=e=>{const t=N();e.waitUntil(t.activate())};var C;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),C={},function(e){N().addToCacheList(e),e.length>0&&(self.addEventListener("install",P),self.addEventListener("activate",Q))}([{url:"_next/static/chunks/160333671cb2c0d9bcad4aae6ba95a9e8f3761d2.9708f84493aff45b242d.js",revision:"cb56051857cd3d0fba59b2b1d56386be"},{url:"_next/static/chunks/29107295.9234196b81fd02ccfdc7.js",revision:"29e5c0bc2f6690c6e84e9faa88072e02"},{url:"_next/static/chunks/486a28a48d001b75cd09d443f64fc7c326306bc5.96e54de04c15d71ed2ef.js",revision:"9736a22e10f6298b79943ab587b49147"},{url:"_next/static/chunks/5963ac0d289e228b0a704e9cae2f4bd1fa22b5c8.7e02b68300e2fd166e12.js",revision:"ac30b97b6dc9d198aa89cebc438e732f"},{url:"_next/static/chunks/70bf118c9d45140bc0a716fcade1b89157aa5c9b.deed5eed1dab21a45acd.js",revision:"e52c486aa3d7b2ac56f61844fce0b434"},{url:"_next/static/chunks/7f1bf7353d683611acd6092770f86d8eaf5fd875.eb8ba3b2a52e8e075d72.js",revision:"755de6c84460604c482be28eee8542ef"},{url:"_next/static/chunks/8eaf0d49e3bd6fda8ce7dc1e99aba634b5442d8b.8593ab6f7a8a8d1d042c.js",revision:"e23ae587921850faf2dd71dd408ca464"},{url:"_next/static/chunks/a29ae703.a6b1d49c8c18c916051d.js",revision:"b4d98aa353fdfb78b8e2798fbf65b083"},{url:"_next/static/chunks/a4592b64fc6d54063750c623a2ebb197380bf145.6aafbe998de7c270fe19.js",revision:"64d4c6777377be31365131d54899b92c"},{url:"_next/static/chunks/c96b4d7e.d22bf489834c20c51945.js",revision:"c2b5a16e9238d490aaa0f622ea9ed940"},{url:"_next/static/chunks/cdec7737265a605e4dcb5ed3bcbe427bdb71e36b.b990028738d317dba5be.js",revision:"5365a01881c21788726eaf35139b209f"},{url:"_next/static/chunks/commons.d207e9baa9df58f53439.js",revision:"eae6bdefc4b4c1bad3f734dc3193e3b1"},{url:"_next/static/chunks/e071f4da73c15f7b409de36f537b0a6af14b3a84.aa647899fc4071839a87.js",revision:"24572f3202648e72fe7172cb557b8050"},{url:"_next/static/chunks/e66545f7c4c1dfbd8e969fa8daf25ecc6919e1ae.300b386bbf51801697f6.js",revision:"170896b031ae1968e55617994f417deb"},{url:"_next/static/chunks/ea116f831000d0237059f64bf01f24f1a9e0f39b.2bf707e2942ad3572ce5.js",revision:"b92f6fa8a06992a13d966c56de9c6b75"},{url:"_next/static/chunks/f1daeb4262f45faacfc04dc16ca62940d6355ed3.475aa6618c25f93d0df1.js",revision:"8e612f655a17b4d24d7f7d5ddc68565b"},{url:"_next/static/chunks/fb398ba03ca99994349ea478c8f362f8a28be317.1744c32cbb947bd9d9ed.js",revision:"97529b9929011bb88fad11b0df3d5a8c"},{url:"_next/static/chunks/fc8d00fd.afd2d8f4015a50040cc7.js",revision:"034a5909526fbfd8b9f907ec8a52d5df"},{url:"_next/static/chunks/framework.ecbd939e3f22c21530d6.js",revision:"f1f44d4b846ef72b49ca7ba18b1f46ed"},{url:"_next/static/css/0b10e9f32b7d87c5b5ed.css",revision:"9b6bf2b0849057358aaaeb0dd19e37db"},{url:"_next/static/css/82cdff9d095f5d7a12bb.css",revision:"6b687fd5afb07213a49206ef2e8317af"},{url:"_next/static/runtime/main-00e67620c6b92839287b.js",revision:"b94d5329b028cb21854c3b4e5acf10f5"},{url:"_next/static/runtime/polyfills-6fc9c16da0f56a6bfd37.js",revision:"183078308a2ea59c12d51151de2095f7"},{url:"_next/static/runtime/webpack-c212667a5f965e81e004.js",revision:"cd00a63b218fd15ffccf530cd57d5a5e"},{url:"_next/static/xuDBb_0KvWoOa_4SzqnMQ/_buildManifest.js",revision:"dec6f7cfceb7cc7f1c38cbb241a4ffad"},{url:"_next/static/xuDBb_0KvWoOa_4SzqnMQ/_ssgManifest.js",revision:"abee47769bf307639ace4945f9cfd4ff"},{url:"_next/static/xuDBb_0KvWoOa_4SzqnMQ/pages/_app.js",revision:"37f11e71eca655c96908b894f769fb04"},{url:"_next/static/xuDBb_0KvWoOa_4SzqnMQ/pages/_error.js",revision:"56ecda379ffc555c9f3ff226d36463df"},{url:"_next/static/xuDBb_0KvWoOa_4SzqnMQ/pages/course/[cid]/queue/[qid].js",revision:"d408ff7cae487f887c5699a055c42fe8"},{url:"_next/static/xuDBb_0KvWoOa_4SzqnMQ/pages/course/[cid]/schedule.js",revision:"854eda26ee3e686d53daa02c6f7cc3a3"},{url:"_next/static/xuDBb_0KvWoOa_4SzqnMQ/pages/course/[cid]/today.js",revision:"1595a33c3e98cbcc274592d4dba521e1"},{url:"_next/static/xuDBb_0KvWoOa_4SzqnMQ/pages/dev.js",revision:"77dece994c04e9fb3cf04c124b6c4fdf"},{url:"_next/static/xuDBb_0KvWoOa_4SzqnMQ/pages/index.js",revision:"41aad23a8cbaadd6f18552b05982ee4b"},{url:"_next/static/xuDBb_0KvWoOa_4SzqnMQ/pages/login.js",revision:"d3a9fdfb73d392c83af7ef0bc81daf0d"},{url:"_next/static/xuDBb_0KvWoOa_4SzqnMQ/pages/nocourses.js",revision:"388b79787bf60cf12e5f12f77a680aef"},{url:"_next/static/xuDBb_0KvWoOa_4SzqnMQ/pages/settings.js",revision:"902e22c7e20c4bcdb04574ee988fec0f"}]),W(C),function(e,s,i){let c;if("string"==typeof e){const t=new URL(e,location.href);c=new n(({url:e})=>e.href===t.href,s,i)}else if(e instanceof RegExp)c=new a(e,s,i);else if("function"==typeof e)c=new n(e,s,i);else{if(!(e instanceof n))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});c=e}o().registerRoute(c)}(/^https?.*/,new class{constructor(e={}){if(this.v=d(e.cacheName),e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this.D=t?e.plugins:[L,...e.plugins]}else this.D=[L];this.N=e.networkTimeoutSeconds||0,this.S=e.fetchOptions,this.W=e.matchOptions}async handle({event:e,request:s}){const n=[];"string"==typeof s&&(s=new Request(s));const a=[];let i;if(this.N){const{id:t,promise:c}=this.B({request:s,event:e,logs:n});i=t,a.push(c)}const c=this.T({timeoutId:i,request:s,event:e,logs:n});a.push(c);let r=await Promise.race(a);if(r||(r=await c),!r)throw new t("no-response",{url:s.url});return r}B({request:e,logs:t,event:s}){let n;return{promise:new Promise(t=>{n=setTimeout(async()=>{t(await this.P({request:e,event:s}))},1e3*this.N)}),id:n}}async T({timeoutId:e,request:t,logs:s,event:n}){let a,i;try{i=await U({request:t,event:n,fetchOptions:this.S,plugins:this.D})}catch(e){a=e}if(e&&clearTimeout(e),a||!i)i=await this.P({request:t,event:n});else{const e=i.clone(),s=R({cacheName:this.v,request:t,response:e,event:n,plugins:this.D});if(n)try{n.waitUntil(s)}catch(e){}}return i}P({event:e,request:t}){return j({cacheName:this.v,request:t,event:e,matchOptions:this.W,plugins:this.D})}}({cacheName:"offlineCache",plugins:[new class{constructor(e={}){var t;this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:n})=>{if(!n)return null;const a=this.C(n),i=this.I(s);l(i.expireEntries());const c=i.updateTimestamp(t.url);if(e)try{e.waitUntil(c)}catch(e){}return a?n:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this.I(e);await s.updateTimestamp(t.url),await s.expireEntries()},this.A=e,this.U=e.maxAgeSeconds,this.F=new Map,e.purgeOnQuotaError&&(t=()=>this.deleteCacheAndMetadata(),b.add(t))}I(e){if(e===d())throw new t("expire-custom-caches-only");let s=this.F.get(e);return s||(s=new v(e,this.A),this.F.set(e,s)),s}C(e){if(!this.U)return!0;const t=this.H(e);if(null===t)return!0;return t>=Date.now()-1e3*this.U}H(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this.F)await self.caches.delete(e),await t.delete();this.F=new Map}}({maxEntries:200,purgeOnQuotaError:!0})]}),"GET");
//# sourceMappingURL=service-worker.js.map
