try{self["workbox:core:5.1.3"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:5.1.3"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class n{constructor(e,t,n="GET"){this.handler=s(t),this.match=e,this.method=n}}class i extends n{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}const c=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),"");class a{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:i}=this.findMatchingRoute({url:s,request:e,event:t});let c,a=i&&i.handler;if(!a&&this.s&&(a=this.s),a){try{c=a.handle({url:s,request:e,event:t,params:n})}catch(e){c=Promise.reject(e)}return c instanceof Promise&&this.i&&(c=c.catch(n=>this.i.handle({url:s,request:e,event:t}))),c}}findMatchingRoute({url:e,request:t,event:s}){const n=this.t.get(t.method)||[];for(const i of n){let n;const c=i.match({url:e,request:t,event:s});if(c)return n=c,(Array.isArray(c)&&0===c.length||c.constructor===Object&&0===Object.keys(c).length||"boolean"==typeof c)&&(n=void 0),{route:i,params:n}}return{}}setDefaultHandler(e){this.s=s(e)}setCatchHandler(e){this.i=s(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this.t.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(s,1)}}let r;const o=()=>(r||(r=new a,r.addFetchListener(),r.addCacheListener()),r);const u={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},f=e=>[u.prefix,e,u.suffix].filter(e=>e&&e.length>0).join("-"),h=e=>e||f(u.precache),d=e=>e||f(u.runtime);function l(e){e.then(()=>{})}const b=new Set;class w{constructor(e,t,{onupgradeneeded:s,onversionchange:n}={}){this.o=null,this.u=e,this.h=t,this.l=s,this.p=n||(()=>this.close())}get db(){return this.o}async open(){if(!this.o)return this.o=await new Promise((e,t)=>{let s=!1;setTimeout(()=>{s=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const n=indexedDB.open(this.u,this.h);n.onerror=()=>t(n.error),n.onupgradeneeded=e=>{s?(n.transaction.abort(),n.result.close()):"function"==typeof this.l&&this.l(e)},n.onsuccess=()=>{const t=n.result;s?t.close():(t.onversionchange=this.p.bind(this),e(t))}}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,s){return await this.getAllMatching(e,{query:t,count:s})}async getAllKeys(e,t,s){return(await this.getAllMatching(e,{query:t,count:s,includeKeys:!0})).map(e=>e.key)}async getAllMatching(e,{index:t,query:s=null,direction:n="next",count:i,includeKeys:c=!1}={}){return await this.transaction([e],"readonly",(a,r)=>{const o=a.objectStore(e),u=t?o.index(t):o,f=[],h=u.openCursor(s,n);h.onsuccess=()=>{const e=h.result;e?(f.push(c?e:e.value),i&&f.length>=i?r(f):e.continue()):r(f)}})}async transaction(e,t,s){return await this.open(),await new Promise((n,i)=>{const c=this.o.transaction(e,t);c.onabort=()=>i(c.error),c.oncomplete=()=>n(),s(c,e=>n(e))})}async g(e,t,s,...n){return await this.transaction([t],s,(s,i)=>{const c=s.objectStore(t),a=c[e].apply(c,n);a.onsuccess=()=>i(a.result)})}close(){this.o&&(this.o.close(),this.o=null)}}w.prototype.OPEN_TIMEOUT=2e3;const p={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(p))for(const s of t)s in IDBObjectStore.prototype&&(w.prototype[s]=async function(t,...n){return await this.g(s,t,e,...n)});try{self["workbox:expiration:5.1.3"]&&_()}catch(e){}const y=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class g{constructor(e){this.m=e,this.o=new w("workbox-expiration",1,{onupgradeneeded:e=>this.v(e)})}v(e){const t=e.target.result.createObjectStore("cache-entries",{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1}),(async e=>{await new Promise((t,s)=>{const n=indexedDB.deleteDatabase(e);n.onerror=()=>{s(n.error)},n.onblocked=()=>{s(new Error("Delete blocked"))},n.onsuccess=()=>{t()}})})(this.m)}async setTimestamp(e,t){const s={url:e=y(e),timestamp:t,cacheName:this.m,id:this._(e)};await this.o.put("cache-entries",s)}async getTimestamp(e){return(await this.o.get("cache-entries",this._(e))).timestamp}async expireEntries(e,t){const s=await this.o.transaction("cache-entries","readwrite",(s,n)=>{const i=s.objectStore("cache-entries").index("timestamp").openCursor(null,"prev"),c=[];let a=0;i.onsuccess=()=>{const s=i.result;if(s){const n=s.value;n.cacheName===this.m&&(e&&n.timestamp<e||t&&a>=t?c.push(s.value):a++),s.continue()}else n(c)}}),n=[];for(const e of s)await this.o.delete("cache-entries",e.id),n.push(e.url);return n}_(e){return this.m+"|"+y(e)}}class m{constructor(e,t={}){this.q=!1,this.U=!1,this.R=t.maxEntries,this.j=t.maxAgeSeconds,this.m=e,this.L=new g(e)}async expireEntries(){if(this.q)return void(this.U=!0);this.q=!0;const e=this.j?Date.now()-1e3*this.j:0,t=await this.L.expireEntries(e,this.R),s=await self.caches.open(this.m);for(const e of t)await s.delete(e);this.q=!1,this.U&&(this.U=!1,l(this.expireEntries()))}async updateTimestamp(e){await this.L.setTimestamp(e,Date.now())}async isURLExpired(e){if(this.j){return await this.L.getTimestamp(e)<Date.now()-1e3*this.j}return!1}async delete(){this.U=!1,await this.L.expireEntries(1/0)}}const v=(e,t)=>e.filter(e=>t in e),q=async({request:e,mode:t,plugins:s=[]})=>{const n=v(s,"cacheKeyWillBeUsed");let i=e;for(const e of n)i=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:i}),"string"==typeof i&&(i=new Request(i));return i},x=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:i=[]})=>{const c=await self.caches.open(e),a=await q({plugins:i,request:t,mode:"read"});let r=await c.match(a,n);for(const t of i)if("cachedResponseWillBeUsed"in t){const i=t.cachedResponseWillBeUsed;r=await i.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:r,request:a})}return r},U=async({cacheName:e,request:s,response:n,event:i,plugins:a=[],matchOptions:r})=>{const o=await q({plugins:a,request:s,mode:"write"});if(!n)throw new t("cache-put-with-no-response",{url:c(o.url)});const u=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let i=t,c=!1;for(const t of n)if("cacheWillUpdate"in t){c=!0;const n=t.cacheWillUpdate;if(i=await n.call(t,{request:e,response:i,event:s}),!i)break}return c||(i=i&&200===i.status?i:void 0),i||null})({event:i,plugins:a,response:n,request:o});if(!u)return;const f=await self.caches.open(e),h=v(a,"cacheDidUpdate"),d=h.length>0?await x({cacheName:e,matchOptions:r,request:o}):null;try{await f.put(o,u)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of b)await e()}(),e}for(const t of h)await t.cacheDidUpdate.call(t,{cacheName:e,event:i,oldResponse:d,newResponse:u,request:o})},R=x,j=async({request:e,fetchOptions:s,event:n,plugins:i=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const c=v(i,"fetchDidFail"),a=c.length>0?e.clone():null;try{for(const t of i)if("requestWillFetch"in t){const s=t.requestWillFetch,i=e.clone();e=await s.call(t,{request:i,event:n})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const r=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of i)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:n,request:r,response:t}));return t}catch(e){for(const t of c)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:a.clone(),request:r.clone()});throw e}};try{self["workbox:strategies:5.1.3"]&&_()}catch(e){}const E={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};let L;async function k(e,t){const s=e.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},i=t?t(n):n,c=function(){if(void 0===L){const e=new Response("");if("body"in e)try{new Response(e.body),L=!0}catch(e){L=!1}L=!1}return L}()?s.body:await s.blob();return new Response(c,i)}try{self["workbox:precaching:5.1.3"]&&_()}catch(e){}function C(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const i=new URL(n,location.href),c=new URL(n,location.href);return i.searchParams.set("__WB_REVISION__",s),{cacheKey:i.href,url:c.href}}class I{constructor(e){this.m=h(e),this.k=new Map,this.C=new Map,this.I=new Map}addToCacheList(e){const s=[];for(const n of e){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:i}=C(n),c="string"!=typeof n&&n.revision?"reload":"default";if(this.k.has(i)&&this.k.get(i)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.k.get(i),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.I.has(e)&&this.I.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:i});this.I.set(e,n.integrity)}if(this.k.set(i,e),this.C.set(i,c),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],n=[],i=await self.caches.open(this.m),c=await i.keys(),a=new Set(c.map(e=>e.url));for(const[e,t]of this.k)a.has(t)?n.push(e):s.push({cacheKey:t,url:e});const r=s.map(({cacheKey:s,url:n})=>{const i=this.I.get(s),c=this.C.get(n);return this.N({cacheKey:s,cacheMode:c,event:e,integrity:i,plugins:t,url:n})});await Promise.all(r);return{updatedURLs:s.map(e=>e.url),notUpdatedURLs:n}}async activate(){const e=await self.caches.open(this.m),t=await e.keys(),s=new Set(this.k.values()),n=[];for(const i of t)s.has(i.url)||(await e.delete(i),n.push(i.url));return{deletedURLs:n}}async N({cacheKey:e,url:s,cacheMode:n,event:i,plugins:c,integrity:a}){const r=new Request(s,{integrity:a,cache:n,credentials:"same-origin"});let o,u=await j({event:i,plugins:c,request:r});for(const e of c||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:i,request:r,response:u}):u.status<400))throw new t("bad-precaching-response",{url:s,status:u.status});u.redirected&&(u=await k(u)),await U({event:i,plugins:c,response:u,request:e===s?r:new Request(e),cacheName:this.m,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.k}getCachedURLs(){return[...this.k.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.k.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.m)).match(s)}}createHandler(e=!0){return async({request:s})=>{try{const e=await this.matchPrecache(s);if(e)return e;throw new t("missing-precache-entry",{cacheName:this.m,url:s instanceof Request?s.url:s})}catch(t){if(e)return fetch(s);throw t}}}createHandlerBoundToURL(e,s=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const n=this.createHandler(s),i=new Request(e);return()=>n({request:i})}}let N;const W=()=>(N||(N=new I),N);const H=(e,t)=>{const s=W().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:i}={}){const c=new URL(e,location.href);c.hash="",yield c.href;const a=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(c,t);if(yield a.href,s&&a.pathname.endsWith("/")){const e=new URL(a.href);e.pathname+=s,yield e.href}if(n){const e=new URL(a.href);e.pathname+=".html",yield e.href}if(i){const e=i({url:c});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let M=!1;function T(e){M||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const i=h();self.addEventListener("fetch",c=>{const a=H(c.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!a)return;let r=self.caches.open(i).then(e=>e.match(a)).then(e=>e||fetch(a));c.respondWith(r)})})(e),M=!0)}const K=[],P={get:()=>K,add(e){K.push(...e)}},G=e=>{const t=W(),s=P.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},O=e=>{const t=W();e.waitUntil(t.activate())};var D;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),D={},function(e){W().addToCacheList(e),e.length>0&&(self.addEventListener("install",G),self.addEventListener("activate",O))}([{url:"_next/static/_IyUaUWyfGbCHEqYZli0u/_buildManifest.js",revision:"a7bf078a9164f7238b7b40e836e5fd0b"},{url:"_next/static/_IyUaUWyfGbCHEqYZli0u/_ssgManifest.js",revision:"abee47769bf307639ace4945f9cfd4ff"},{url:"_next/static/_IyUaUWyfGbCHEqYZli0u/pages/_app.js",revision:"f07e2c2365bc45949325d84463c66e9b"},{url:"_next/static/_IyUaUWyfGbCHEqYZli0u/pages/_error.js",revision:"1b6b89c422859e21da699dc35392172a"},{url:"_next/static/_IyUaUWyfGbCHEqYZli0u/pages/course/[cid]/course_overrides.js",revision:"a9204876cf73896925b2ef4326f91a31"},{url:"_next/static/_IyUaUWyfGbCHEqYZli0u/pages/course/[cid]/queue/[qid].js",revision:"a178616d0abb1cf43d9522930e4354da"},{url:"_next/static/_IyUaUWyfGbCHEqYZli0u/pages/course/[cid]/schedule.js",revision:"ce43cea11c309630993d337644c7a6b6"},{url:"_next/static/_IyUaUWyfGbCHEqYZli0u/pages/course/[cid]/today.js",revision:"cb7685bc26251da70e9c571695071f90"},{url:"_next/static/_IyUaUWyfGbCHEqYZli0u/pages/dev.js",revision:"bd3df6e7cecc7eaf16bee63bfab150c8"},{url:"_next/static/_IyUaUWyfGbCHEqYZli0u/pages/index.js",revision:"c5ba3dba3c5aca83e098c59b13ff171d"},{url:"_next/static/_IyUaUWyfGbCHEqYZli0u/pages/login.js",revision:"be257eafa33b020d6328bffcae5da4af"},{url:"_next/static/_IyUaUWyfGbCHEqYZli0u/pages/nocourses.js",revision:"9b388b96db146bc88d6caddfbd61ef8b"},{url:"_next/static/_IyUaUWyfGbCHEqYZli0u/pages/settings.js",revision:"d443fc6febbdebaa41356b4ddfe7cb41"},{url:"_next/static/chunks/09f9223d04b0216800dcb7cde9469d34bad73193.772f35a82498f7b19b0c.js",revision:"3d0e965c5ba9d9ef90c218d015be809a"},{url:"_next/static/chunks/0aec887964c9f3fe2f30cb3b0edd4fc4965d3db8.a19e18f911bef145edcd.js",revision:"ab1bdc88d0ab80a663dbee4820947d4d"},{url:"_next/static/chunks/1778aab8e64b5236b894589fb7ea596a91875e4c.40c67a5873e125ca51e6.js",revision:"77e7199450bfc7899909250ce8359e1f"},{url:"_next/static/chunks/1fb3c6f1e245dadc1f7d7a72a3a9fd4362455e46.1236030ff06720cafd5b.js",revision:"4c980256482b8defb41bed80de0e8d6c"},{url:"_next/static/chunks/29107295.8007f4499acc1bea4d2b.js",revision:"cbfd6cc2bfe1dd2859ce6257974dd068"},{url:"_next/static/chunks/2cb59d273b172e5772b79d156e91c1f62291b7c5.372e1928c575f3c94e68.js",revision:"5b5e8067848745804386a9815c7d6f57"},{url:"_next/static/chunks/5cb5e924767de9b01e04ff293e89ba256830f9fd.f0b53fd959560d09a358.js",revision:"a7ac739c67f7be552e0031432d417a22"},{url:"_next/static/chunks/68751b3ac11ba56e8f3cffc234aaa62cb58f50b6.f27c25670349c37531b3.js",revision:"cdab239493607c23d68c167377d1b18a"},{url:"_next/static/chunks/8c9d47f1111c7825132d13d94c6502e716199a54.0407d144701cf7539f86.js",revision:"cbe08172b6e2acbccc9a51e5ae0313fc"},{url:"_next/static/chunks/93f81b562fe5d1f1be4edf9236ecaf014bad6e5e.475aa6618c25f93d0df1.js",revision:"4e225d534c6f68b900346c5a879dccda"},{url:"_next/static/chunks/a29ae703.16fee017b3d899b4d271.js",revision:"a5544d641d1220b8f8cb9d8e7825346f"},{url:"_next/static/chunks/a9753a33c69640685d63e060545becc1f94fe111.4c293d76a44722518e6e.js",revision:"9c0d562b1dc6ff4d0294c83ce986d99a"},{url:"_next/static/chunks/b7d6c79503dc7f885da05aa99c175855f420f798.9708f84493aff45b242d.js",revision:"b696361c61b3273f528d5007adc73c03"},{url:"_next/static/chunks/c96b4d7e.f4afce0e74c846e46773.js",revision:"291cbf6757f16c9b94c9084805b69a6d"},{url:"_next/static/chunks/commons.3c61fad3002e4c5e8ab3.js",revision:"be1abdac4a2aa8f1930016243739a5e8"},{url:"_next/static/chunks/dce84c505bb3097fd080ac2e3348eb7abe84083b.b3404c96cbce06515a37.js",revision:"92b56db0d1bdb72ef7235b3cfb75e90d"},{url:"_next/static/chunks/e062f767a430050b1d7f947f363f902bd1429a1b.4bf8503260c79f8d9b08.js",revision:"fe2bdbfabfb1a001e349b9d9057c481e"},{url:"_next/static/chunks/efea5a6e6f9f67fd078dec3d9ba4087812413714.8593ab6f7a8a8d1d042c.js",revision:"901e0d5270e6cc4321485427bcb78b3d"},{url:"_next/static/chunks/fbb6f7226a4955630f809ea988cc19ba2e11cebf.858394df8083bbcf280a.js",revision:"5f7ea673a4dc0aec22743558f662a24e"},{url:"_next/static/chunks/fc8d00fd.105400fd842c78d2f13a.js",revision:"564759336aed862a15a54765bd95bbff"},{url:"_next/static/chunks/framework.ecbd939e3f22c21530d6.js",revision:"f1f44d4b846ef72b49ca7ba18b1f46ed"},{url:"_next/static/css/0b10e9f32b7d87c5b5ed.css",revision:"9b6bf2b0849057358aaaeb0dd19e37db"},{url:"_next/static/css/20de8917c44a516a459d.css",revision:"9a8cd95b5f951cd1c4dfc2843aaa0909"},{url:"_next/static/runtime/main-3bac09093514ca1afa48.js",revision:"bab7192bc1df1d9c49dc0ae441c1f172"},{url:"_next/static/runtime/polyfills-af358d449deda25628fc.js",revision:"087968fe0019883656082efb646b88b1"},{url:"_next/static/runtime/webpack-1c5199ff66550d26e499.js",revision:"029ee2e7063b1566925082c49e4afc45"}]),T(D),function(e,s,c){let a;if("string"==typeof e){const t=new URL(e,location.href);a=new n(({url:e})=>e.href===t.href,s,c)}else if(e instanceof RegExp)a=new i(e,s,c);else if("function"==typeof e)a=new n(e,s,c);else{if(!(e instanceof n))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=e}o().registerRoute(a)}(/^https?.*/,new class{constructor(e={}){if(this.m=d(e.cacheName),e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this.W=t?e.plugins:[E,...e.plugins]}else this.W=[E];this.H=e.networkTimeoutSeconds||0,this.M=e.fetchOptions,this.T=e.matchOptions}async handle({event:e,request:s}){const n=[];"string"==typeof s&&(s=new Request(s));const i=[];let c;if(this.H){const{id:t,promise:a}=this.K({request:s,event:e,logs:n});c=t,i.push(a)}const a=this.P({timeoutId:c,request:s,event:e,logs:n});i.push(a);let r=await Promise.race(i);if(r||(r=await a),!r)throw new t("no-response",{url:s.url});return r}K({request:e,logs:t,event:s}){let n;return{promise:new Promise(t=>{n=setTimeout(async()=>{t(await this.G({request:e,event:s}))},1e3*this.H)}),id:n}}async P({timeoutId:e,request:t,logs:s,event:n}){let i,c;try{c=await j({request:t,event:n,fetchOptions:this.M,plugins:this.W})}catch(e){i=e}if(e&&clearTimeout(e),i||!c)c=await this.G({request:t,event:n});else{const e=c.clone(),s=U({cacheName:this.m,request:t,response:e,event:n,plugins:this.W});if(n)try{n.waitUntil(s)}catch(e){}}return c}G({event:e,request:t}){return R({cacheName:this.m,request:t,event:e,matchOptions:this.T,plugins:this.W})}}({cacheName:"offlineCache",plugins:[new class{constructor(e={}){var t;this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:n})=>{if(!n)return null;const i=this.O(n),c=this.D(s);l(c.expireEntries());const a=c.updateTimestamp(t.url);if(e)try{e.waitUntil(a)}catch(e){}return i?n:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this.D(e);await s.updateTimestamp(t.url),await s.expireEntries()},this.Y=e,this.j=e.maxAgeSeconds,this.Z=new Map,e.purgeOnQuotaError&&(t=()=>this.deleteCacheAndMetadata(),b.add(t))}D(e){if(e===d())throw new t("expire-custom-caches-only");let s=this.Z.get(e);return s||(s=new m(e,this.Y),this.Z.set(e,s)),s}O(e){if(!this.j)return!0;const t=this.A(e);if(null===t)return!0;return t>=Date.now()-1e3*this.j}A(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this.Z)await self.caches.delete(e),await t.delete();this.Z=new Map}}({maxEntries:200,purgeOnQuotaError:!0})]}),"GET");
//# sourceMappingURL=service-worker.js.map
