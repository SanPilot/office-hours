try{self["workbox:core:5.1.3"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:5.1.3"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class n{constructor(e,t,n="GET"){this.handler=s(t),this.match=e,this.method=n}}class c extends n{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}const a=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),"");class i{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:c}=this.findMatchingRoute({url:s,request:e,event:t});let a,i=c&&c.handler;if(!i&&this.s&&(i=this.s),i){try{a=i.handle({url:s,request:e,event:t,params:n})}catch(e){a=Promise.reject(e)}return a instanceof Promise&&this.i&&(a=a.catch(n=>this.i.handle({url:s,request:e,event:t}))),a}}findMatchingRoute({url:e,request:t,event:s}){const n=this.t.get(t.method)||[];for(const c of n){let n;const a=c.match({url:e,request:t,event:s});if(a)return n=a,(Array.isArray(a)&&0===a.length||a.constructor===Object&&0===Object.keys(a).length||"boolean"==typeof a)&&(n=void 0),{route:c,params:n}}return{}}setDefaultHandler(e){this.s=s(e)}setCatchHandler(e){this.i=s(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this.t.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(s,1)}}let r;const o=()=>(r||(r=new i,r.addFetchListener(),r.addCacheListener()),r);const u={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},f=e=>[u.prefix,e,u.suffix].filter(e=>e&&e.length>0).join("-"),h=e=>e||f(u.precache),d=e=>e||f(u.runtime);function l(e){e.then(()=>{})}const b=new Set;class w{constructor(e,t,{onupgradeneeded:s,onversionchange:n}={}){this.o=null,this.u=e,this.h=t,this.l=s,this.p=n||(()=>this.close())}get db(){return this.o}async open(){if(!this.o)return this.o=await new Promise((e,t)=>{let s=!1;setTimeout(()=>{s=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const n=indexedDB.open(this.u,this.h);n.onerror=()=>t(n.error),n.onupgradeneeded=e=>{s?(n.transaction.abort(),n.result.close()):"function"==typeof this.l&&this.l(e)},n.onsuccess=()=>{const t=n.result;s?t.close():(t.onversionchange=this.p.bind(this),e(t))}}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,s){return await this.getAllMatching(e,{query:t,count:s})}async getAllKeys(e,t,s){return(await this.getAllMatching(e,{query:t,count:s,includeKeys:!0})).map(e=>e.key)}async getAllMatching(e,{index:t,query:s=null,direction:n="next",count:c,includeKeys:a=!1}={}){return await this.transaction([e],"readonly",(i,r)=>{const o=i.objectStore(e),u=t?o.index(t):o,f=[],h=u.openCursor(s,n);h.onsuccess=()=>{const e=h.result;e?(f.push(a?e:e.value),c&&f.length>=c?r(f):e.continue()):r(f)}})}async transaction(e,t,s){return await this.open(),await new Promise((n,c)=>{const a=this.o.transaction(e,t);a.onabort=()=>c(a.error),a.oncomplete=()=>n(),s(a,e=>n(e))})}async g(e,t,s,...n){return await this.transaction([t],s,(s,c)=>{const a=s.objectStore(t),i=a[e].apply(a,n);i.onsuccess=()=>c(i.result)})}close(){this.o&&(this.o.close(),this.o=null)}}w.prototype.OPEN_TIMEOUT=2e3;const y={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(y))for(const s of t)s in IDBObjectStore.prototype&&(w.prototype[s]=async function(t,...n){return await this.g(s,t,e,...n)});try{self["workbox:expiration:5.1.3"]&&_()}catch(e){}const p=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class g{constructor(e){this.m=e,this.o=new w("workbox-expiration",1,{onupgradeneeded:e=>this.v(e)})}v(e){const t=e.target.result.createObjectStore("cache-entries",{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1}),(async e=>{await new Promise((t,s)=>{const n=indexedDB.deleteDatabase(e);n.onerror=()=>{s(n.error)},n.onblocked=()=>{s(new Error("Delete blocked"))},n.onsuccess=()=>{t()}})})(this.m)}async setTimestamp(e,t){const s={url:e=p(e),timestamp:t,cacheName:this.m,id:this.R(e)};await this.o.put("cache-entries",s)}async getTimestamp(e){return(await this.o.get("cache-entries",this.R(e))).timestamp}async expireEntries(e,t){const s=await this.o.transaction("cache-entries","readwrite",(s,n)=>{const c=s.objectStore("cache-entries").index("timestamp").openCursor(null,"prev"),a=[];let i=0;c.onsuccess=()=>{const s=c.result;if(s){const n=s.value;n.cacheName===this.m&&(e&&n.timestamp<e||t&&i>=t?a.push(s.value):i++),s.continue()}else n(a)}}),n=[];for(const e of s)await this.o.delete("cache-entries",e.id),n.push(e.url);return n}R(e){return this.m+"|"+p(e)}}class m{constructor(e,t={}){this._=!1,this.q=!1,this.j=t.maxEntries,this.U=t.maxAgeSeconds,this.m=e,this.k=new g(e)}async expireEntries(){if(this._)return void(this.q=!0);this._=!0;const e=this.U?Date.now()-1e3*this.U:0,t=await this.k.expireEntries(e,this.j),s=await self.caches.open(this.m);for(const e of t)await s.delete(e);this._=!1,this.q&&(this.q=!1,l(this.expireEntries()))}async updateTimestamp(e){await this.k.setTimestamp(e,Date.now())}async isURLExpired(e){if(this.U){return await this.k.getTimestamp(e)<Date.now()-1e3*this.U}return!1}async delete(){this.q=!1,await this.k.expireEntries(1/0)}}const v=(e,t)=>e.filter(e=>t in e),x=async({request:e,mode:t,plugins:s=[]})=>{const n=v(s,"cacheKeyWillBeUsed");let c=e;for(const e of n)c=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:c}),"string"==typeof c&&(c=new Request(c));return c},R=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:c=[]})=>{const a=await self.caches.open(e),i=await x({plugins:c,request:t,mode:"read"});let r=await a.match(i,n);for(const t of c)if("cachedResponseWillBeUsed"in t){const c=t.cachedResponseWillBeUsed;r=await c.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:r,request:i})}return r},q=async({cacheName:e,request:s,response:n,event:c,plugins:i=[],matchOptions:r})=>{const o=await x({plugins:i,request:s,mode:"write"});if(!n)throw new t("cache-put-with-no-response",{url:a(o.url)});const u=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let c=t,a=!1;for(const t of n)if("cacheWillUpdate"in t){a=!0;const n=t.cacheWillUpdate;if(c=await n.call(t,{request:e,response:c,event:s}),!c)break}return a||(c=c&&200===c.status?c:void 0),c||null})({event:c,plugins:i,response:n,request:o});if(!u)return;const f=await self.caches.open(e),h=v(i,"cacheDidUpdate"),d=h.length>0?await R({cacheName:e,matchOptions:r,request:o}):null;try{await f.put(o,u)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of b)await e()}(),e}for(const t of h)await t.cacheDidUpdate.call(t,{cacheName:e,event:c,oldResponse:d,newResponse:u,request:o})},j=R,U=async({request:e,fetchOptions:s,event:n,plugins:c=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const a=v(c,"fetchDidFail"),i=a.length>0?e.clone():null;try{for(const t of c)if("requestWillFetch"in t){const s=t.requestWillFetch,c=e.clone();e=await s.call(t,{request:c,event:n})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const r=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of c)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:n,request:r,response:t}));return t}catch(e){for(const t of a)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:i.clone(),request:r.clone()});throw e}};try{self["workbox:strategies:5.1.3"]&&_()}catch(e){}const k={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};let L;async function D(e,t){const s=e.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},c=t?t(n):n,a=function(){if(void 0===L){const e=new Response("");if("body"in e)try{new Response(e.body),L=!0}catch(e){L=!1}L=!1}return L}()?s.body:await s.blob();return new Response(a,c)}try{self["workbox:precaching:5.1.3"]&&_()}catch(e){}function V(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const c=new URL(n,location.href),a=new URL(n,location.href);return c.searchParams.set("__WB_REVISION__",s),{cacheKey:c.href,url:a.href}}class N{constructor(e){this.m=h(e),this.L=new Map,this.D=new Map,this.V=new Map}addToCacheList(e){const s=[];for(const n of e){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:c}=V(n),a="string"!=typeof n&&n.revision?"reload":"default";if(this.L.has(c)&&this.L.get(c)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.L.get(c),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.V.has(e)&&this.V.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:c});this.V.set(e,n.integrity)}if(this.L.set(c,e),this.D.set(c,a),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],n=[],c=await self.caches.open(this.m),a=await c.keys(),i=new Set(a.map(e=>e.url));for(const[e,t]of this.L)i.has(t)?n.push(e):s.push({cacheKey:t,url:e});const r=s.map(({cacheKey:s,url:n})=>{const c=this.V.get(s),a=this.D.get(n);return this.N({cacheKey:s,cacheMode:a,event:e,integrity:c,plugins:t,url:n})});await Promise.all(r);return{updatedURLs:s.map(e=>e.url),notUpdatedURLs:n}}async activate(){const e=await self.caches.open(this.m),t=await e.keys(),s=new Set(this.L.values()),n=[];for(const c of t)s.has(c.url)||(await e.delete(c),n.push(c.url));return{deletedURLs:n}}async N({cacheKey:e,url:s,cacheMode:n,event:c,plugins:a,integrity:i}){const r=new Request(s,{integrity:i,cache:n,credentials:"same-origin"});let o,u=await U({event:c,plugins:a,request:r});for(const e of a||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:c,request:r,response:u}):u.status<400))throw new t("bad-precaching-response",{url:s,status:u.status});u.redirected&&(u=await D(u)),await q({event:c,plugins:a,response:u,request:e===s?r:new Request(e),cacheName:this.m,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.L}getCachedURLs(){return[...this.L.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.L.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.m)).match(s)}}createHandler(e=!0){return async({request:s})=>{try{const e=await this.matchPrecache(s);if(e)return e;throw new t("missing-precache-entry",{cacheName:this.m,url:s instanceof Request?s.url:s})}catch(t){if(e)return fetch(s);throw t}}}createHandlerBoundToURL(e,s=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const n=this.createHandler(s),c=new Request(e);return()=>n({request:c})}}let E;const B=()=>(E||(E=new N),E);const M=(e,t)=>{const s=B().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:c}={}){const a=new URL(e,location.href);a.hash="",yield a.href;const i=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(a,t);if(yield i.href,s&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=s,yield e.href}if(n){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(c){const e=c({url:a});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let T=!1;function K(e){T||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const c=h();self.addEventListener("fetch",a=>{const i=M(a.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!i)return;let r=self.caches.open(c).then(e=>e.match(i)).then(e=>e||fetch(i));a.respondWith(r)})})(e),T=!0)}const P=[],O={get:()=>P,add(e){P.push(...e)}},Q=e=>{const t=B(),s=O.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},C=e=>{const t=B();e.waitUntil(t.activate())};var I;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),I={},function(e){B().addToCacheList(e),e.length>0&&(self.addEventListener("install",Q),self.addEventListener("activate",C))}([{url:"_next/static/chunks/05245ccd071e1784eb43e62e03dab388b1a68e09.4510b3294598f6c468e6.js",revision:"a89b79f4667c320499d680eb76192dcb"},{url:"_next/static/chunks/0e9c7ff4661c3ae1c60616b532134e6e8a9235ad.9708f84493aff45b242d.js",revision:"e71f5981a9781af77c86fc54b47eb99a"},{url:"_next/static/chunks/29107295.8007f4499acc1bea4d2b.js",revision:"cbfd6cc2bfe1dd2859ce6257974dd068"},{url:"_next/static/chunks/30f842df11247ab47a173495ca01dc76c8df7724.1236030ff06720cafd5b.js",revision:"3c568419632d90e4ed580a7fcfeeecdc"},{url:"_next/static/chunks/43db308d25720dae8320e389e17c86d37d9db0fa.76f3f8b17aac8dc8335f.js",revision:"3fe4f800d6445d1a7b66636b9de2141e"},{url:"_next/static/chunks/4aefa0e29b0eca98436ca076799becea15aefa97.e045abf429bc88180126.js",revision:"f0ffb467b910b5634b085cabafe6f810"},{url:"_next/static/chunks/5f61133f2909f8243d48931c7de5fe0db633bb93.7e02b68300e2fd166e12.js",revision:"161d094c590847a08d8aefc9208039a8"},{url:"_next/static/chunks/63de6956441d468cde359a33c76095609ba930bd.7e14e97ad48a91a1b140.js",revision:"784422bd9e1f7022ad442603dfef3adb"},{url:"_next/static/chunks/8b1f1764a4a65840005a5f01673ee57286159a68.0f880b5bbaf385481394.js",revision:"d4e052e712755b54682cf77ef9424a36"},{url:"_next/static/chunks/8d038b83758c6e1638473b13cf8de1fda60db096.48a5ac24e0f744c272d3.js",revision:"a1e7e221fecc655590e3c1e34dc4fed9"},{url:"_next/static/chunks/93f2513c6cdb3e7dc955b1b04344c50631fc5faa.46996ce133e8fc75f379.js",revision:"2ff5b8bb339a48d423290a66cfe06462"},{url:"_next/static/chunks/9cec88f4d4613f77366b47e49e4694af78dbea44.96e54de04c15d71ed2ef.js",revision:"83b4d2ed92a18c6dc7fbe4a170395e50"},{url:"_next/static/chunks/9ea8cad60569b5ec87af6b552ec178696979891d.539c1af7b5198ae65a7c.js",revision:"68609a6d907be637ef112bd01d13c595"},{url:"_next/static/chunks/a096eebec0947ce16f0e22e07ce68d1c9c25f08c.1081c1c8525597342cf2.js",revision:"890ace481b1aac88cac07e1748c09b79"},{url:"_next/static/chunks/a29ae703.42bd497555d899daf3d4.js",revision:"d9b24a664a7b32dc0e464367e545693e"},{url:"_next/static/chunks/ba0271d3c72f219bf7d6e63e691fac8ac8174070.475aa6618c25f93d0df1.js",revision:"6d382ea42536fb59bb8ca3fc066ad3cf"},{url:"_next/static/chunks/bb261e85867f87473295d2c52dbad97d4459e6ba.3b8c3604099a090dab3c.js",revision:"5391beaff0c3ea9c80decbd70e5f2b38"},{url:"_next/static/chunks/c45c08be437a177886ad863e850a26d82cb2ab3d.a41fca28cac41199170b.js",revision:"8088f9960823fb406da0003ae3390821"},{url:"_next/static/chunks/c96b4d7e.154f32a9bd6e99a966a9.js",revision:"bd60ea294f9d7dfe5c49aa007a388607"},{url:"_next/static/chunks/commons.50f14c3916bd55b7dae9.js",revision:"5b14d71560fbc8a16cf9f8bdcb7e6e81"},{url:"_next/static/chunks/fc8d00fd.158594bfc26fc793d03b.js",revision:"718970d88a7e977d8c1fe92cb6b7c698"},{url:"_next/static/chunks/framework.ecbd939e3f22c21530d6.js",revision:"f1f44d4b846ef72b49ca7ba18b1f46ed"},{url:"_next/static/css/0b10e9f32b7d87c5b5ed.css",revision:"9b6bf2b0849057358aaaeb0dd19e37db"},{url:"_next/static/css/20de8917c44a516a459d.css",revision:"9a8cd95b5f951cd1c4dfc2843aaa0909"},{url:"_next/static/mystQc0Ryn3VdayDecB4V/_buildManifest.js",revision:"0d92f3269022c66962d6aa4011b95b40"},{url:"_next/static/mystQc0Ryn3VdayDecB4V/_ssgManifest.js",revision:"abee47769bf307639ace4945f9cfd4ff"},{url:"_next/static/mystQc0Ryn3VdayDecB4V/pages/_app.js",revision:"e2104cd79c2fbdc6a99ef185e65355ae"},{url:"_next/static/mystQc0Ryn3VdayDecB4V/pages/_error.js",revision:"0827f6428561a9d28eb8c9497af9f2b9"},{url:"_next/static/mystQc0Ryn3VdayDecB4V/pages/course/[cid]/course_overrides.js",revision:"84b1db26babba2e723e8c640f3bd2a87"},{url:"_next/static/mystQc0Ryn3VdayDecB4V/pages/course/[cid]/queue/[qid].js",revision:"58c4c432f2be5bf724e6f5946335a391"},{url:"_next/static/mystQc0Ryn3VdayDecB4V/pages/course/[cid]/schedule.js",revision:"5bd757ff14759f6087c9640289a04474"},{url:"_next/static/mystQc0Ryn3VdayDecB4V/pages/course/[cid]/today.js",revision:"b6ab56a04e5755ac9ad3d28d67d10993"},{url:"_next/static/mystQc0Ryn3VdayDecB4V/pages/dev.js",revision:"6f231106d1f7a1879b0824f9374eef56"},{url:"_next/static/mystQc0Ryn3VdayDecB4V/pages/index.js",revision:"1c8137ada954eab59b0afcdd3dd4f743"},{url:"_next/static/mystQc0Ryn3VdayDecB4V/pages/login.js",revision:"5f2b8f29509f5280afc82d0dde3d93c1"},{url:"_next/static/mystQc0Ryn3VdayDecB4V/pages/nocourses.js",revision:"342f8d1636196000e17a1728747ac807"},{url:"_next/static/mystQc0Ryn3VdayDecB4V/pages/settings.js",revision:"8683fd70e1e2410391264fc67c84e839"},{url:"_next/static/runtime/main-e3d3bfc2aa5306ba04a6.js",revision:"8acf0016fc4df14d7c70bdef2f30f7e9"},{url:"_next/static/runtime/polyfills-129b8641b84b21697221.js",revision:"5f0b0318c90f1e0cdedbb1097ad94f47"},{url:"_next/static/runtime/webpack-1c5199ff66550d26e499.js",revision:"029ee2e7063b1566925082c49e4afc45"}]),K(I),function(e,s,a){let i;if("string"==typeof e){const t=new URL(e,location.href);i=new n(({url:e})=>e.href===t.href,s,a)}else if(e instanceof RegExp)i=new c(e,s,a);else if("function"==typeof e)i=new n(e,s,a);else{if(!(e instanceof n))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});i=e}o().registerRoute(i)}(/^https?.*/,new class{constructor(e={}){if(this.m=d(e.cacheName),e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this.B=t?e.plugins:[k,...e.plugins]}else this.B=[k];this.M=e.networkTimeoutSeconds||0,this.T=e.fetchOptions,this.K=e.matchOptions}async handle({event:e,request:s}){const n=[];"string"==typeof s&&(s=new Request(s));const c=[];let a;if(this.M){const{id:t,promise:i}=this.P({request:s,event:e,logs:n});a=t,c.push(i)}const i=this.O({timeoutId:a,request:s,event:e,logs:n});c.push(i);let r=await Promise.race(c);if(r||(r=await i),!r)throw new t("no-response",{url:s.url});return r}P({request:e,logs:t,event:s}){let n;return{promise:new Promise(t=>{n=setTimeout(async()=>{t(await this.C({request:e,event:s}))},1e3*this.M)}),id:n}}async O({timeoutId:e,request:t,logs:s,event:n}){let c,a;try{a=await U({request:t,event:n,fetchOptions:this.T,plugins:this.B})}catch(e){c=e}if(e&&clearTimeout(e),c||!a)a=await this.C({request:t,event:n});else{const e=a.clone(),s=q({cacheName:this.m,request:t,response:e,event:n,plugins:this.B});if(n)try{n.waitUntil(s)}catch(e){}}return a}C({event:e,request:t}){return j({cacheName:this.m,request:t,event:e,matchOptions:this.K,plugins:this.B})}}({cacheName:"offlineCache",plugins:[new class{constructor(e={}){var t;this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:n})=>{if(!n)return null;const c=this.I(n),a=this.A(s);l(a.expireEntries());const i=a.updateTimestamp(t.url);if(e)try{e.waitUntil(i)}catch(e){}return c?n:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this.A(e);await s.updateTimestamp(t.url),await s.expireEntries()},this.S=e,this.U=e.maxAgeSeconds,this.W=new Map,e.purgeOnQuotaError&&(t=()=>this.deleteCacheAndMetadata(),b.add(t))}A(e){if(e===d())throw new t("expire-custom-caches-only");let s=this.W.get(e);return s||(s=new m(e,this.S),this.W.set(e,s)),s}I(e){if(!this.U)return!0;const t=this.F(e);if(null===t)return!0;return t>=Date.now()-1e3*this.U}F(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this.W)await self.caches.delete(e),await t.delete();this.W=new Map}}({maxEntries:200,purgeOnQuotaError:!0})]}),"GET");
//# sourceMappingURL=service-worker.js.map
