try{self["workbox:core:5.1.3"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:5.1.3"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class n{constructor(e,t,n="GET"){this.handler=s(t),this.match=e,this.method=n}}class c extends n{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}const i=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),"");class a{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:c}=this.findMatchingRoute({url:s,request:e,event:t});let i,a=c&&c.handler;if(!a&&this.s&&(a=this.s),a){try{i=a.handle({url:s,request:e,event:t,params:n})}catch(e){i=Promise.reject(e)}return i instanceof Promise&&this.i&&(i=i.catch(n=>this.i.handle({url:s,request:e,event:t}))),i}}findMatchingRoute({url:e,request:t,event:s}){const n=this.t.get(t.method)||[];for(const c of n){let n;const i=c.match({url:e,request:t,event:s});if(i)return n=i,(Array.isArray(i)&&0===i.length||i.constructor===Object&&0===Object.keys(i).length||"boolean"==typeof i)&&(n=void 0),{route:c,params:n}}return{}}setDefaultHandler(e){this.s=s(e)}setCatchHandler(e){this.i=s(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this.t.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(s,1)}}let r;const o=()=>(r||(r=new a,r.addFetchListener(),r.addCacheListener()),r);const f={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},u=e=>[f.prefix,e,f.suffix].filter(e=>e&&e.length>0).join("-"),d=e=>e||u(f.precache),h=e=>e||u(f.runtime);function l(e){e.then(()=>{})}const w=new Set;class b{constructor(e,t,{onupgradeneeded:s,onversionchange:n}={}){this.o=null,this.u=e,this.h=t,this.l=s,this.p=n||(()=>this.close())}get db(){return this.o}async open(){if(!this.o)return this.o=await new Promise((e,t)=>{let s=!1;setTimeout(()=>{s=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const n=indexedDB.open(this.u,this.h);n.onerror=()=>t(n.error),n.onupgradeneeded=e=>{s?(n.transaction.abort(),n.result.close()):"function"==typeof this.l&&this.l(e)},n.onsuccess=()=>{const t=n.result;s?t.close():(t.onversionchange=this.p.bind(this),e(t))}}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,s){return await this.getAllMatching(e,{query:t,count:s})}async getAllKeys(e,t,s){return(await this.getAllMatching(e,{query:t,count:s,includeKeys:!0})).map(e=>e.key)}async getAllMatching(e,{index:t,query:s=null,direction:n="next",count:c,includeKeys:i=!1}={}){return await this.transaction([e],"readonly",(a,r)=>{const o=a.objectStore(e),f=t?o.index(t):o,u=[],d=f.openCursor(s,n);d.onsuccess=()=>{const e=d.result;e?(u.push(i?e:e.value),c&&u.length>=c?r(u):e.continue()):r(u)}})}async transaction(e,t,s){return await this.open(),await new Promise((n,c)=>{const i=this.o.transaction(e,t);i.onabort=()=>c(i.error),i.oncomplete=()=>n(),s(i,e=>n(e))})}async g(e,t,s,...n){return await this.transaction([t],s,(s,c)=>{const i=s.objectStore(t),a=i[e].apply(i,n);a.onsuccess=()=>c(a.result)})}close(){this.o&&(this.o.close(),this.o=null)}}b.prototype.OPEN_TIMEOUT=2e3;const p={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(p))for(const s of t)s in IDBObjectStore.prototype&&(b.prototype[s]=async function(t,...n){return await this.g(s,t,e,...n)});try{self["workbox:expiration:5.1.3"]&&_()}catch(e){}const y=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class g{constructor(e){this.m=e,this.o=new b("workbox-expiration",1,{onupgradeneeded:e=>this.v(e)})}v(e){const t=e.target.result.createObjectStore("cache-entries",{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1}),(async e=>{await new Promise((t,s)=>{const n=indexedDB.deleteDatabase(e);n.onerror=()=>{s(n.error)},n.onblocked=()=>{s(new Error("Delete blocked"))},n.onsuccess=()=>{t()}})})(this.m)}async setTimestamp(e,t){const s={url:e=y(e),timestamp:t,cacheName:this.m,id:this._(e)};await this.o.put("cache-entries",s)}async getTimestamp(e){return(await this.o.get("cache-entries",this._(e))).timestamp}async expireEntries(e,t){const s=await this.o.transaction("cache-entries","readwrite",(s,n)=>{const c=s.objectStore("cache-entries").index("timestamp").openCursor(null,"prev"),i=[];let a=0;c.onsuccess=()=>{const s=c.result;if(s){const n=s.value;n.cacheName===this.m&&(e&&n.timestamp<e||t&&a>=t?i.push(s.value):a++),s.continue()}else n(i)}}),n=[];for(const e of s)await this.o.delete("cache-entries",e.id),n.push(e.url);return n}_(e){return this.m+"|"+y(e)}}class m{constructor(e,t={}){this.q=!1,this.R=!1,this.j=t.maxEntries,this.N=t.maxAgeSeconds,this.m=e,this.U=new g(e)}async expireEntries(){if(this.q)return void(this.R=!0);this.q=!0;const e=this.N?Date.now()-1e3*this.N:0,t=await this.U.expireEntries(e,this.j),s=await self.caches.open(this.m);for(const e of t)await s.delete(e);this.q=!1,this.R&&(this.R=!1,l(this.expireEntries()))}async updateTimestamp(e){await this.U.setTimestamp(e,Date.now())}async isURLExpired(e){if(this.N){return await this.U.getTimestamp(e)<Date.now()-1e3*this.N}return!1}async delete(){this.R=!1,await this.U.expireEntries(1/0)}}const x=(e,t)=>e.filter(e=>t in e),v=async({request:e,mode:t,plugins:s=[]})=>{const n=x(s,"cacheKeyWillBeUsed");let c=e;for(const e of n)c=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:c}),"string"==typeof c&&(c=new Request(c));return c},q=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:c=[]})=>{const i=await self.caches.open(e),a=await v({plugins:c,request:t,mode:"read"});let r=await i.match(a,n);for(const t of c)if("cachedResponseWillBeUsed"in t){const c=t.cachedResponseWillBeUsed;r=await c.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:r,request:a})}return r},R=async({cacheName:e,request:s,response:n,event:c,plugins:a=[],matchOptions:r})=>{const o=await v({plugins:a,request:s,mode:"write"});if(!n)throw new t("cache-put-with-no-response",{url:i(o.url)});const f=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let c=t,i=!1;for(const t of n)if("cacheWillUpdate"in t){i=!0;const n=t.cacheWillUpdate;if(c=await n.call(t,{request:e,response:c,event:s}),!c)break}return i||(c=c&&200===c.status?c:void 0),c||null})({event:c,plugins:a,response:n,request:o});if(!f)return;const u=await self.caches.open(e),d=x(a,"cacheDidUpdate"),h=d.length>0?await q({cacheName:e,matchOptions:r,request:o}):null;try{await u.put(o,f)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of w)await e()}(),e}for(const t of d)await t.cacheDidUpdate.call(t,{cacheName:e,event:c,oldResponse:h,newResponse:f,request:o})},j=q,N=async({request:e,fetchOptions:s,event:n,plugins:c=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const i=x(c,"fetchDidFail"),a=i.length>0?e.clone():null;try{for(const t of c)if("requestWillFetch"in t){const s=t.requestWillFetch,c=e.clone();e=await s.call(t,{request:c,event:n})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const r=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of c)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:n,request:r,response:t}));return t}catch(e){for(const t of i)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:a.clone(),request:r.clone()});throw e}};try{self["workbox:strategies:5.1.3"]&&_()}catch(e){}const U={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};let L;async function k(e,t){const s=e.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},c=t?t(n):n,i=function(){if(void 0===L){const e=new Response("");if("body"in e)try{new Response(e.body),L=!0}catch(e){L=!1}L=!1}return L}()?s.body:await s.blob();return new Response(i,c)}try{self["workbox:precaching:5.1.3"]&&_()}catch(e){}function O(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const c=new URL(n,location.href),i=new URL(n,location.href);return c.searchParams.set("__WB_REVISION__",s),{cacheKey:c.href,url:i.href}}class I{constructor(e){this.m=d(e),this.L=new Map,this.k=new Map,this.O=new Map}addToCacheList(e){const s=[];for(const n of e){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:c}=O(n),i="string"!=typeof n&&n.revision?"reload":"default";if(this.L.has(c)&&this.L.get(c)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.L.get(c),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.O.has(e)&&this.O.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:c});this.O.set(e,n.integrity)}if(this.L.set(c,e),this.k.set(c,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],n=[],c=await self.caches.open(this.m),i=await c.keys(),a=new Set(i.map(e=>e.url));for(const[e,t]of this.L)a.has(t)?n.push(e):s.push({cacheKey:t,url:e});const r=s.map(({cacheKey:s,url:n})=>{const c=this.O.get(s),i=this.k.get(n);return this.I({cacheKey:s,cacheMode:i,event:e,integrity:c,plugins:t,url:n})});await Promise.all(r);return{updatedURLs:s.map(e=>e.url),notUpdatedURLs:n}}async activate(){const e=await self.caches.open(this.m),t=await e.keys(),s=new Set(this.L.values()),n=[];for(const c of t)s.has(c.url)||(await e.delete(c),n.push(c.url));return{deletedURLs:n}}async I({cacheKey:e,url:s,cacheMode:n,event:c,plugins:i,integrity:a}){const r=new Request(s,{integrity:a,cache:n,credentials:"same-origin"});let o,f=await N({event:c,plugins:i,request:r});for(const e of i||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:c,request:r,response:f}):f.status<400))throw new t("bad-precaching-response",{url:s,status:f.status});f.redirected&&(f=await k(f)),await R({event:c,plugins:i,response:f,request:e===s?r:new Request(e),cacheName:this.m,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.L}getCachedURLs(){return[...this.L.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.L.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.m)).match(s)}}createHandler(e=!0){return async({request:s})=>{try{const e=await this.matchPrecache(s);if(e)return e;throw new t("missing-precache-entry",{cacheName:this.m,url:s instanceof Request?s.url:s})}catch(t){if(e)return fetch(s);throw t}}}createHandlerBoundToURL(e,s=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const n=this.createHandler(s),c=new Request(e);return()=>n({request:c})}}let S;const W=()=>(S||(S=new I),S);const E=(e,t)=>{const s=W().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:c}={}){const i=new URL(e,location.href);i.hash="",yield i.href;const a=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(i,t);if(yield a.href,s&&a.pathname.endsWith("/")){const e=new URL(a.href);e.pathname+=s,yield e.href}if(n){const e=new URL(a.href);e.pathname+=".html",yield e.href}if(c){const e=c({url:i});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let M=!1;function T(e){M||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const c=d();self.addEventListener("fetch",i=>{const a=E(i.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!a)return;let r=self.caches.open(c).then(e=>e.match(a)).then(e=>e||fetch(a));i.respondWith(r)})})(e),M=!0)}const K=[],P={get:()=>K,add(e){K.push(...e)}},D=e=>{const t=W(),s=P.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},C=e=>{const t=W();e.waitUntil(t.activate())};var A;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),A={},function(e){W().addToCacheList(e),e.length>0&&(self.addEventListener("install",D),self.addEventListener("activate",C))}([{url:"_next/static/5SrwjI-Nm3pxcfowxWi0O/_buildManifest.js",revision:"cb1ab7b8fe30f253586106650016c4fe"},{url:"_next/static/5SrwjI-Nm3pxcfowxWi0O/_ssgManifest.js",revision:"abee47769bf307639ace4945f9cfd4ff"},{url:"_next/static/5SrwjI-Nm3pxcfowxWi0O/pages/_app.js",revision:"b6e90165a5a2da43f5cd2a2a7db1f7f0"},{url:"_next/static/5SrwjI-Nm3pxcfowxWi0O/pages/_error.js",revision:"1b6b89c422859e21da699dc35392172a"},{url:"_next/static/5SrwjI-Nm3pxcfowxWi0O/pages/course/[cid]/course_overrides.js",revision:"9f8d2438020541a5f6bf51e39b7366e0"},{url:"_next/static/5SrwjI-Nm3pxcfowxWi0O/pages/course/[cid]/queue/[qid].js",revision:"0081141085cd39ccb6990c524b547e22"},{url:"_next/static/5SrwjI-Nm3pxcfowxWi0O/pages/course/[cid]/schedule.js",revision:"3ff781cf896eeabeb70425917a5b732a"},{url:"_next/static/5SrwjI-Nm3pxcfowxWi0O/pages/course/[cid]/today.js",revision:"dc8d29f7684f110cc83d403271d4c757"},{url:"_next/static/5SrwjI-Nm3pxcfowxWi0O/pages/dev.js",revision:"bd3df6e7cecc7eaf16bee63bfab150c8"},{url:"_next/static/5SrwjI-Nm3pxcfowxWi0O/pages/index.js",revision:"c5ba3dba3c5aca83e098c59b13ff171d"},{url:"_next/static/5SrwjI-Nm3pxcfowxWi0O/pages/login.js",revision:"be257eafa33b020d6328bffcae5da4af"},{url:"_next/static/5SrwjI-Nm3pxcfowxWi0O/pages/nocourses.js",revision:"0c94edd95f49d63dc0c505628db62085"},{url:"_next/static/5SrwjI-Nm3pxcfowxWi0O/pages/settings.js",revision:"bd8ade30542a19bb64a30933a061b0fa"},{url:"_next/static/chunks/07115442a4599b5a85d93ee8d659db01964e531e.1236030ff06720cafd5b.js",revision:"8f0d2dddf0354fb51201420c2e6bbc37"},{url:"_next/static/chunks/1e2939d434f4abdeb421e648abd58e096e2f3d95.772f35a82498f7b19b0c.js",revision:"baaf58d2a57a81ec532b9cf36e89f128"},{url:"_next/static/chunks/2111c968f1ad3f11b54b705660295f6d091e1d08.2df97e6ea6892df5a6a1.js",revision:"75caf05f768e255b988f9a843686fff9"},{url:"_next/static/chunks/29107295.8007f4499acc1bea4d2b.js",revision:"cbfd6cc2bfe1dd2859ce6257974dd068"},{url:"_next/static/chunks/3ed90979def2c6d2cb9da5884b7c638e7fb20c38.111c0fd02265ec7da160.js",revision:"216cb72a308d0157d76de571b95bbefc"},{url:"_next/static/chunks/50a186e5f1cd60b6d1238d19c5295e7e086860ff.475aa6618c25f93d0df1.js",revision:"c31002c209d7d4cca46744481e2dbd9c"},{url:"_next/static/chunks/5721bd650515ced36ff244adf65558d11c1163f7.40c67a5873e125ca51e6.js",revision:"f2d101913c26aabb1a48759d15b8ee2c"},{url:"_next/static/chunks/6da9852d6f973dcb193f7a72ad7dad5c0cf95eb9.372e1928c575f3c94e68.js",revision:"27418ac7cec73d2422b1c50b607947d5"},{url:"_next/static/chunks/9e2dc54443807dcef0a463e2fb7cbdb7c57bcf54.1578a968bc3af9d4c0f6.js",revision:"874e69d263be700626baa3d14ddfe9d1"},{url:"_next/static/chunks/a19badff8ea29a216d732910a4bc16e982bda645.54418c2cf159bb7fd8c0.js",revision:"0382f4bd6d85d039d015881dfbb7b773"},{url:"_next/static/chunks/a29ae703.16fee017b3d899b4d271.js",revision:"a5544d641d1220b8f8cb9d8e7825346f"},{url:"_next/static/chunks/ac8b0150d0ec0b4904bc73bf18910afa972217f7.8593ab6f7a8a8d1d042c.js",revision:"76e27d0048db2672909eef5e879b81a3"},{url:"_next/static/chunks/c051cfd62fec9fe6ec5f3704d5a8ff9ea79ec1ed.a19e18f911bef145edcd.js",revision:"5ec29637a6c91747978d94bde50ba9d1"},{url:"_next/static/chunks/c2d40b3a8f7e410867c8c1b983b4473f449f5ccc.37c550ed7b3ce9533dff.js",revision:"5b867c002c269455e89d0e598b477769"},{url:"_next/static/chunks/c96b4d7e.31f9101fb3d732608b90.js",revision:"6d4a06db07951dcaf0e199b0c687107c"},{url:"_next/static/chunks/commons.b90d8e7c0b39bb96a2d9.js",revision:"24c02998d5fdb67e95611a6f5c7bc32b"},{url:"_next/static/chunks/ee3d8c393bb0c7c6000010b29fce2798859c436d.9708f84493aff45b242d.js",revision:"f4c6af7eaa205c25943fce04176095a7"},{url:"_next/static/chunks/f2f7b162b16470b788fd72ab1d82097c78d55546.b3404c96cbce06515a37.js",revision:"5139c90007c0b9c5cb7ba47bb3261617"},{url:"_next/static/chunks/fa6a7fb04fac3ebf7b5cdcde73bb71f3696865d1.858394df8083bbcf280a.js",revision:"49224a7637ad3f026f4281cdc50b9883"},{url:"_next/static/chunks/fc8d00fd.105400fd842c78d2f13a.js",revision:"564759336aed862a15a54765bd95bbff"},{url:"_next/static/chunks/framework.ecbd939e3f22c21530d6.js",revision:"f1f44d4b846ef72b49ca7ba18b1f46ed"},{url:"_next/static/css/0b10e9f32b7d87c5b5ed.css",revision:"9b6bf2b0849057358aaaeb0dd19e37db"},{url:"_next/static/css/20de8917c44a516a459d.css",revision:"9a8cd95b5f951cd1c4dfc2843aaa0909"},{url:"_next/static/runtime/main-3bac09093514ca1afa48.js",revision:"bab7192bc1df1d9c49dc0ae441c1f172"},{url:"_next/static/runtime/polyfills-af358d449deda25628fc.js",revision:"087968fe0019883656082efb646b88b1"},{url:"_next/static/runtime/webpack-1c5199ff66550d26e499.js",revision:"029ee2e7063b1566925082c49e4afc45"}]),T(A),function(e,s,i){let a;if("string"==typeof e){const t=new URL(e,location.href);a=new n(({url:e})=>e.href===t.href,s,i)}else if(e instanceof RegExp)a=new c(e,s,i);else if("function"==typeof e)a=new n(e,s,i);else{if(!(e instanceof n))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=e}o().registerRoute(a)}(/^https?.*/,new class{constructor(e={}){if(this.m=h(e.cacheName),e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this.S=t?e.plugins:[U,...e.plugins]}else this.S=[U];this.W=e.networkTimeoutSeconds||0,this.M=e.fetchOptions,this.T=e.matchOptions}async handle({event:e,request:s}){const n=[];"string"==typeof s&&(s=new Request(s));const c=[];let i;if(this.W){const{id:t,promise:a}=this.K({request:s,event:e,logs:n});i=t,c.push(a)}const a=this.P({timeoutId:i,request:s,event:e,logs:n});c.push(a);let r=await Promise.race(c);if(r||(r=await a),!r)throw new t("no-response",{url:s.url});return r}K({request:e,logs:t,event:s}){let n;return{promise:new Promise(t=>{n=setTimeout(async()=>{t(await this.D({request:e,event:s}))},1e3*this.W)}),id:n}}async P({timeoutId:e,request:t,logs:s,event:n}){let c,i;try{i=await N({request:t,event:n,fetchOptions:this.M,plugins:this.S})}catch(e){c=e}if(e&&clearTimeout(e),c||!i)i=await this.D({request:t,event:n});else{const e=i.clone(),s=R({cacheName:this.m,request:t,response:e,event:n,plugins:this.S});if(n)try{n.waitUntil(s)}catch(e){}}return i}D({event:e,request:t}){return j({cacheName:this.m,request:t,event:e,matchOptions:this.T,plugins:this.S})}}({cacheName:"offlineCache",plugins:[new class{constructor(e={}){var t;this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:n})=>{if(!n)return null;const c=this.C(n),i=this.A(s);l(i.expireEntries());const a=i.updateTimestamp(t.url);if(e)try{e.waitUntil(a)}catch(e){}return c?n:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this.A(e);await s.updateTimestamp(t.url),await s.expireEntries()},this.B=e,this.N=e.maxAgeSeconds,this.F=new Map,e.purgeOnQuotaError&&(t=()=>this.deleteCacheAndMetadata(),w.add(t))}A(e){if(e===h())throw new t("expire-custom-caches-only");let s=this.F.get(e);return s||(s=new m(e,this.B),this.F.set(e,s)),s}C(e){if(!this.N)return!0;const t=this.H(e);if(null===t)return!0;return t>=Date.now()-1e3*this.N}H(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this.F)await self.caches.delete(e),await t.delete();this.F=new Map}}({maxEntries:200,purgeOnQuotaError:!0})]}),"GET");
//# sourceMappingURL=service-worker.js.map
